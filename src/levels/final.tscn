[gd_scene load_steps=52 format=3 uid="uid://djmdpyji4v6c7"]

[ext_resource type="PackedScene" uid="uid://c3dtr3q53u5ko" path="res://src/world_particles.tscn" id="1_lskhw"]
[ext_resource type="Script" uid="uid://dwq0dxdypl7eq" path="res://src/levels/final.gd" id="1_x3c7f"]
[ext_resource type="MeshLibrary" uid="uid://cq6usy1jsasv2" path="res://new_mesh_library.tres" id="2_auc74"]
[ext_resource type="Texture2D" uid="uid://0f5c20u325uy" path="res://assets/meshes/book1.png" id="3_1nfkf"]
[ext_resource type="ArrayMesh" uid="uid://24or723yakdl" path="res://assets/meshes/door.obj" id="3_7cg2m"]
[ext_resource type="ArrayMesh" uid="uid://cnbl5h7ohrk8r" path="res://assets/meshes/book1.obj" id="4_btjxb"]
[ext_resource type="Script" uid="uid://b350ud5guf1hk" path="res://src/levels/door.gd" id="4_kllwd"]
[ext_resource type="Texture2D" uid="uid://vv2r1mijggqx" path="res://assets/meshes/book2.png" id="5_d2o5d"]
[ext_resource type="PackedScene" uid="uid://d3xvo57cm6c1i" path="res://src/chandelier.tscn" id="5_nirle"]
[ext_resource type="Texture2D" uid="uid://dvxbgwwkggctj" path="res://assets/meshes/paper_note.png" id="6_gpk7n"]
[ext_resource type="ArrayMesh" uid="uid://c2xg85kcsxtsl" path="res://assets/meshes/book2.obj" id="6_gruom"]
[ext_resource type="Texture2D" uid="uid://ctxwau3i3mfnt" path="res://assets/meshes/book3.png" id="7_6jvls"]
[ext_resource type="ArrayMesh" uid="uid://d0b0psexgtgca" path="res://assets/meshes/paper_note.obj" id="7_x3c7f"]
[ext_resource type="ArrayMesh" uid="uid://dqxtqnesboyeu" path="res://assets/meshes/book3.obj" id="8_w7syj"]
[ext_resource type="Texture2D" uid="uid://uo3760eri0fi" path="res://assets/meshes/escalier.png" id="12_6jvls"]
[ext_resource type="ArrayMesh" uid="uid://uddhpmjf2cfr" path="res://assets/meshes/escalier.obj" id="13_w7syj"]
[ext_resource type="Texture2D" uid="uid://bje1dttsm1r02" path="res://assets/meshes/newspaper.png" id="14_jckou"]
[ext_resource type="ArrayMesh" uid="uid://d4j5fdqu5g342" path="res://assets/meshes/newspaper.obj" id="15_etpry"]
[ext_resource type="Texture2D" uid="uid://cvq58cl7rvfkm" path="res://assets/meshes/chair.png" id="18_ig5kx"]
[ext_resource type="ArrayMesh" uid="uid://bnvspujhxu7y" path="res://assets/meshes/chair.obj" id="19_bebq3"]
[ext_resource type="Texture2D" uid="uid://fihcmvqk15m5" path="res://assets/meshes/chest.png" id="20_fn3di"]
[ext_resource type="ArrayMesh" uid="uid://dbo2qx8o1elgk" path="res://assets/meshes/chest.obj" id="21_18bka"]
[ext_resource type="Texture2D" uid="uid://nea5g0oam3p3" path="res://assets/meshes/desk.png" id="22_sotle"]
[ext_resource type="ArrayMesh" uid="uid://kfjl8e647atl" path="res://assets/meshes/desk.obj" id="23_3ybhc"]

[sub_resource type="Environment" id="Environment_auc74"]
ambient_light_source = 3
reflected_light_source = 2
glow_enabled = true
glow_intensity = 1.5
volumetric_fog_enabled = true
volumetric_fog_density = 0.2
volumetric_fog_albedo = Color(0.905882, 0.843137, 1, 1)
volumetric_fog_anisotropy = 0.6
volumetric_fog_length = 512.0

[sub_resource type="Animation" id="Animation_n8d1h"]
resource_name = "Final_Cutscene"
length = 30.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3, 4, 5.69388, 8, 8.03333, 8.06667, 8.1, 8.13333, 8.16667, 8.2, 8.23333, 8.26667, 8.3, 8.33333, 8.36667, 8.4, 8.43333, 8.46667, 8.5, 8.53333, 8.56667, 8.6, 8.63333, 8.66667, 8.7, 8.73333, 8.76667, 8.8, 8.83333, 8.86667, 8.9, 8.93333, 8.96667, 9, 9.03333, 9.06667, 9.1, 9.13333, 9.16667, 9.2, 9.23333, 9.26667, 9.3, 9.33333, 9.36667, 9.4, 9.43333, 9.46667, 9.5, 9.53333, 9.56667, 9.6, 9.63333, 9.66667, 9.7, 9.73333, 9.76667, 9.8, 9.83333, 9.86667, 9.9, 9.93333, 9.96667, 10, 10.0333, 10.0667, 10.1, 10.1333, 10.1667, 10.2, 10.2333, 10.2667, 10.3, 10.3333, 10.3667, 10.4, 10.4333, 10.4667, 10.5, 10.5333, 10.5667, 10.6, 10.6333, 10.6667, 10.7, 10.7333, 10.7667, 10.8, 10.8333, 10.8667, 10.9, 10.9333, 10.9667, 11, 11.0333, 11.0667, 11.1, 11.1333, 11.1667, 11.2, 11.2333, 11.2667, 11.3, 11.3333, 11.3667, 11.4, 11.4333, 11.4667, 11.5, 11.5333, 11.5667, 11.6, 11.6333, 11.6667, 11.7, 11.7333, 11.7667, 11.8, 11.8333, 11.8667, 11.9, 11.9333, 11.9667, 12, 12.0333, 12.0667, 12.1, 12.1333, 12.1667, 12.2, 12.2333, 12.2667, 12.3, 12.3333, 12.3667, 12.4, 12.4333, 12.4667, 12.5, 12.5333, 12.5667, 12.6, 12.6333, 12.6667, 12.7, 12.7333, 12.7667, 12.8, 12.8333, 12.8667, 12.9, 12.9333, 12.9667, 13, 13.0333, 13.0667, 13.1, 13.1333, 13.1667, 13.2, 13.2333, 13.2667, 13.3, 13.3333, 13.3667, 13.4, 13.4333, 13.4667, 13.5, 13.5333, 13.5667, 13.6, 13.6333, 13.6667, 13.7, 13.7333, 13.7667, 13.8, 13.8333, 13.8667, 13.9, 13.9333, 13.9667, 14, 14.0333, 14.0667, 14.1, 14.1333, 14.1667, 14.2, 14.2333, 14.2667, 14.3, 14.3333, 14.3667, 14.4, 14.4333, 14.4667, 14.5, 14.5333, 14.5667, 14.6, 14.6333, 14.6667, 14.7, 14.7333, 14.7667, 14.8, 14.8333, 14.8667, 14.9, 14.9333, 14.9667, 15, 15.0333, 15.0667, 15.1, 15.1333, 15.1667, 15.2, 15.2333, 15.2667, 15.3, 15.3333, 15.3667, 15.4, 15.4333, 15.4667, 15.5, 15.5333, 15.5667, 15.6, 15.6333, 15.6667, 15.7, 15.7333, 15.7667, 15.8, 15.8333, 15.8667, 15.9, 15.9333, 15.9667, 16, 16.0333, 16.0667, 16.1, 16.1333, 16.1667, 16.2, 16.2333, 16.2667, 16.3, 16.3333, 16.3667, 16.4, 16.4333, 16.4667, 16.5, 16.5333, 16.5667, 16.6, 16.6333, 16.6667, 16.7, 16.7333, 16.7667, 16.8, 16.8333, 16.8667, 16.9, 16.9333, 16.9667, 17, 17.0333, 17.0667, 17.1, 17.1333, 17.1667, 17.2, 17.2333, 17.2667, 17.3, 17.3333, 17.3667, 17.4, 17.4333, 17.4667, 17.5, 17.5333, 17.5667, 17.6, 17.6333, 17.6667, 17.7, 17.7333, 17.7667, 17.8, 17.8333, 17.8667, 17.9, 17.9333, 17.9667, 18, 18.0333, 18.0667, 18.1, 18.1333, 18.1667, 18.2, 18.2333, 18.2667, 18.3, 18.3333, 18.3667, 18.4, 18.4333, 18.4667, 18.5, 18.5333, 18.5667, 18.6, 18.6333, 18.6667, 18.7, 18.7333, 18.7667, 18.8, 18.8333, 18.8667, 18.9, 18.9333, 18.9667, 19, 19.0333, 19.0667, 19.1, 19.1333, 19.1667, 19.2, 19.2333, 19.2667, 19.3, 19.3333, 19.3667, 19.4, 19.4333, 19.4667, 19.5, 19.5333, 19.5667, 19.6, 19.6333, 19.6667, 19.7, 19.7333, 19.7667, 19.8, 19.8333, 19.8667, 19.9, 19.9333, 19.9667, 20, 20.0333, 20.0667, 20.1, 20.1333, 20.1667, 20.2, 20.2333, 20.2667, 20.3, 20.3333, 20.3667, 20.4, 20.4333, 20.4667, 20.5, 20.5333, 20.5667, 20.6, 20.6333, 20.6667, 20.7, 20.7333, 20.7667, 20.8, 20.8333, 20.8667, 20.9, 20.9333, 20.9667, 21, 21.0333, 21.0667, 21.1, 21.1333, 21.1667, 21.2, 21.2333, 21.2667, 21.3, 21.3333, 21.3667, 21.4, 21.4333, 21.4667, 21.5, 21.5333, 21.5667, 21.6, 21.6333, 21.6667, 21.7, 21.7333, 21.7667, 21.8, 21.8333, 21.8667, 21.9, 21.9333, 21.9667, 22, 22.0333, 22.0667, 22.1, 22.1333, 22.1667, 22.2, 22.2333, 22.2667, 22.3, 22.3333, 22.3667, 22.4, 22.4333, 22.4667, 22.5, 22.5333, 22.5667, 22.6, 22.6333, 22.6667, 22.7, 22.7333, 22.7667, 22.8, 22.8333, 22.8667, 22.9, 22.9333, 22.9667, 23, 23.0333, 23.0667, 23.1, 23.1333, 23.1667, 23.2, 23.2333, 23.2667, 23.3, 23.3333, 23.3667, 23.4, 23.4333, 23.4667, 23.5, 23.5333, 23.5667, 23.6, 23.6333, 23.6667, 23.7, 23.7333, 23.7667, 23.8, 23.8333, 23.8667, 23.9, 23.9333, 23.9667, 24, 24.0333, 24.0667, 24.1, 24.1333, 24.1667, 24.2, 24.2333, 24.2667, 24.3, 24.3333, 24.3667, 24.4, 24.4333, 24.4667, 24.5, 24.5333, 24.5667, 24.6, 24.6333, 24.6667, 24.7, 24.7333, 24.7667, 24.8, 24.8333, 24.8667, 24.9, 24.9333, 24.9667, 25, 25.0333, 25.0667, 25.1, 25.1333, 25.1667, 25.2, 25.2333, 25.2667, 25.3, 25.3333, 25.3667, 25.4, 25.4333, 25.4667, 25.5, 25.5333, 25.5667, 25.6, 25.6333, 25.6667, 25.7, 25.7333, 25.7667, 25.8, 25.8333, 25.8667, 25.9, 25.9333, 25.9667, 26, 26.0333, 26.0667, 26.1, 26.1333, 26.1667, 26.2, 26.2333, 26.2667, 26.3, 26.3333, 26.3667, 26.4, 26.4333, 26.4667, 26.5, 26.5333, 26.5667, 26.6, 26.6333, 26.6667, 26.7, 26.7333, 26.7667, 26.8, 26.8333, 26.8667, 26.9, 26.9333, 26.9667, 27, 27.0333, 27.0667, 27.1, 27.1333, 27.1667, 27.2, 27.2333, 27.2667, 27.3, 27.3333, 27.3667, 27.4, 27.4333, 27.4667, 27.5, 27.5333, 27.5667, 27.6, 27.6333, 27.6667, 27.7, 27.7333, 27.7667, 27.8, 27.8333, 27.8667, 27.9, 27.9333, 27.9667, 28, 28.0333, 28.0667, 28.1, 28.1333, 28.1667, 28.2, 28.2333, 28.2667, 28.3, 28.3333, 28.3667, 28.4, 28.4333, 28.4667, 28.5, 28.5333, 28.5667, 28.6, 28.6333, 28.6667, 28.7, 28.7333, 28.7667, 28.8, 28.8333, 28.8667, 28.9, 28.9333, 28.9667, 29, 29.0333, 29.0667, 29.1, 29.1333, 29.1667, 29.2, 29.2333, 29.2667, 29.3, 29.3333, 29.3667, 29.4, 29.4333, 29.4667, 29.5, 29.5333, 29.5667, 29.6, 29.6333, 29.6667, 29.7, 29.7333, 29.7667, 29.8, 29.8333, 29.8667, 29.9, 29.9333, 29.9667, 30),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, 2, 14), Vector3(0, 2, 11), Vector3(0, 2.5, 10), Vector3(-2.30622, 2.5, 8.53961), Vector3(-5.44603, 2.5, 8.1941), Vector3(-5.44674, 2.5, 8.19136), Vector3(-5.44887, 2.5, 8.18316), Vector3(-5.45242, 2.5, 8.16952), Vector3(-5.45737, 2.5, 8.15047), Vector3(-5.46371, 2.5, 8.12607), Vector3(-5.47143, 2.5, 8.09638), Vector3(-5.4805, 2.5, 8.06148), Vector3(-5.4909, 2.5, 8.02148), Vector3(-5.50259, 2.5, 7.97648), Vector3(-5.51556, 2.5, 7.9266), Vector3(-5.52976, 2.5, 7.87198), Vector3(-5.54514, 2.5, 7.81277), Vector3(-5.56168, 2.5, 7.74913), Vector3(-5.57933, 2.5, 7.68124), Vector3(-5.59803, 2.5, 7.60929), Vector3(-5.61774, 2.5, 7.53346), Vector3(-5.6384, 2.5, 7.45397), Vector3(-5.65996, 2.5, 7.37104), Vector3(-5.68235, 2.5, 7.28489), Vector3(-5.70551, 2.5, 7.19576), Vector3(-5.72939, 2.5, 7.10389), Vector3(-5.75392, 2.5, 7.00954), Vector3(-5.77902, 2.5, 6.91297), Vector3(-5.80463, 2.5, 6.81443), Vector3(-5.83068, 2.5, 6.7142), Vector3(-5.8571, 2.5, 6.61255), Vector3(-5.88382, 2.5, 6.50977), Vector3(-5.91075, 2.5, 6.40613), Vector3(-5.93784, 2.5, 6.30192), Vector3(-5.965, 2.5, 6.19742), Vector3(-5.99216, 2.5, 6.09292), Vector3(-6.01925, 2.5, 5.98871), Vector3(-6.04619, 2.5, 5.88507), Vector3(-6.0729, 2.5, 5.78229), Vector3(-6.09932, 2.5, 5.68064), Vector3(-6.12537, 2.5, 5.58041), Vector3(-6.15098, 2.5, 5.48187), Vector3(-6.17608, 2.5, 5.3853), Vector3(-6.20061, 2.5, 5.29095), Vector3(-6.22449, 2.5, 5.19908), Vector3(-6.24765, 2.5, 5.10995), Vector3(-6.27004, 2.5, 5.0238), Vector3(-6.2916, 2.5, 4.94087), Vector3(-6.31226, 2.5, 4.86138), Vector3(-6.33197, 2.5, 4.78555), Vector3(-6.35067, 2.5, 4.7136), Vector3(-6.36832, 2.5, 4.64571), Vector3(-6.38486, 2.5, 4.58207), Vector3(-6.40025, 2.5, 4.52286), Vector3(-6.41444, 2.5, 4.46824), Vector3(-6.42741, 2.5, 4.41836), Vector3(-6.4391, 2.5, 4.37336), Vector3(-6.4495, 2.5, 4.33336), Vector3(-6.45857, 2.5, 4.29846), Vector3(-6.46629, 2.5, 4.26877), Vector3(-6.47263, 2.5, 4.24437), Vector3(-6.47758, 2.5, 4.22532), Vector3(-6.48113, 2.5, 4.21168), Vector3(-6.48326, 2.5, 4.20348), Vector3(-6.48397, 2.5, 4.20074), Vector3(-6.48267, 2.5, 4.19947), Vector3(-6.47877, 2.5, 4.19568), Vector3(-6.47228, 2.5, 4.18936), Vector3(-6.46322, 2.5, 4.18054), Vector3(-6.45161, 2.5, 4.16924), Vector3(-6.43749, 2.5, 4.15549), Vector3(-6.4209, 2.5, 4.13934), Vector3(-6.40188, 2.5, 4.12081), Vector3(-6.38047, 2.5, 4.09998), Vector3(-6.35675, 2.5, 4.07688), Vector3(-6.33078, 2.5, 4.05159), Vector3(-6.30262, 2.5, 4.02418), Vector3(-6.27235, 2.5, 3.99471), Vector3(-6.24007, 2.5, 3.96328), Vector3(-6.20585, 2.5, 3.92996), Vector3(-6.16978, 2.5, 3.89485), Vector3(-6.13198, 2.5, 3.85805), Vector3(-6.09254, 2.5, 3.81965), Vector3(-6.05157, 2.5, 3.77976), Vector3(-6.00918, 2.5, 3.73849), Vector3(-5.96549, 2.5, 3.69596), Vector3(-5.92062, 2.5, 3.65227), Vector3(-5.87469, 2.5, 3.60755), Vector3(-5.82783, 2.5, 3.56193), Vector3(-5.78016, 2.5, 3.51552), Vector3(-5.73182, 2.5, 3.46846), Vector3(-5.68294, 2.5, 3.42087), Vector3(-5.63365, 2.5, 3.37288), Vector3(-5.58409, 2.5, 3.32463), Vector3(-5.5344, 2.5, 3.27624), Vector3(-5.4847, 2.5, 3.22786), Vector3(-5.43514, 2.5, 3.17961), Vector3(-5.38585, 2.5, 3.13162), Vector3(-5.33697, 2.5, 3.08403), Vector3(-5.28863, 2.5, 3.03697), Vector3(-5.24096, 2.5, 2.99056), Vector3(-5.1941, 2.5, 2.94494), Vector3(-5.14817, 2.5, 2.90022), Vector3(-5.1033, 2.5, 2.85653), Vector3(-5.05961, 2.5, 2.814), Vector3(-5.01722, 2.5, 2.77273), Vector3(-4.97625, 2.5, 2.73284), Vector3(-4.93681, 2.5, 2.69444), Vector3(-4.899, 2.5, 2.65764), Vector3(-4.86294, 2.5, 2.62253), Vector3(-4.82872, 2.5, 2.58921), Vector3(-4.79644, 2.5, 2.55778), Vector3(-4.76617, 2.5, 2.52831), Vector3(-4.73801, 2.5, 2.5009), Vector3(-4.71204, 2.5, 2.47561), Vector3(-4.68832, 2.5, 2.45251), Vector3(-4.66691, 2.5, 2.43168), Vector3(-4.64789, 2.5, 2.41315), Vector3(-4.6313, 2.5, 2.397), Vector3(-4.61718, 2.5, 2.38325), Vector3(-4.60557, 2.5, 2.37195), Vector3(-4.59651, 2.5, 2.36313), Vector3(-4.59002, 2.5, 2.35681), Vector3(-4.58612, 2.5, 2.35302), Vector3(-4.58482, 2.5, 2.35175), Vector3(-4.58523, 2.5, 2.3508), Vector3(-4.58648, 2.5, 2.34797), Vector3(-4.58855, 2.5, 2.34324), Vector3(-4.59144, 2.5, 2.33662), Vector3(-4.59517, 2.5, 2.32812), Vector3(-4.59971, 2.5, 2.31775), Vector3(-4.60507, 2.5, 2.3055), Vector3(-4.61125, 2.5, 2.2914), Vector3(-4.61823, 2.5, 2.27544), Vector3(-4.62602, 2.5, 2.25765), Vector3(-4.63462, 2.5, 2.23802), Vector3(-4.644, 2.5, 2.21658), Vector3(-4.65418, 2.5, 2.19334), Vector3(-4.66514, 2.5, 2.16832), Vector3(-4.67687, 2.5, 2.14152), Vector3(-4.68937, 2.5, 2.11298), Vector3(-4.70262, 2.5, 2.08271), Vector3(-4.71662, 2.5, 2.05074), Vector3(-4.73136, 2.5, 2.01707), Vector3(-4.74683, 2.5, 1.98174), Vector3(-4.76302, 2.5, 1.94478), Vector3(-4.77991, 2.5, 1.9062), Vector3(-4.7975, 2.5, 1.86603), Vector3(-4.81577, 2.5, 1.8243), Vector3(-4.83471, 2.5, 1.78104), Vector3(-4.85431, 2.5, 1.73628), Vector3(-4.87455, 2.5, 1.69005), Vector3(-4.89542, 2.5, 1.64238), Vector3(-4.91691, 2.5, 1.5933), Vector3(-4.939, 2.5, 1.54285), Vector3(-4.96168, 2.5, 1.49106), Vector3(-4.98493, 2.5, 1.43797), Vector3(-5.00873, 2.5, 1.38361), Vector3(-5.03307, 2.5, 1.32802), Vector3(-5.05793, 2.5, 1.27124), Vector3(-5.08329, 2.5, 1.21331), Vector3(-5.10915, 2.5, 1.15427), Vector3(-5.13547, 2.5, 1.09415), Vector3(-5.16224, 2.5, 1.03301), Vector3(-5.18945, 2.5, 0.970872), Vector3(-5.21707, 2.5, 0.90779), Vector3(-5.24508, 2.5, 0.843805), Vector3(-5.27348, 2.5, 0.778961), Vector3(-5.30223, 2.5, 0.713302), Vector3(-5.33131, 2.5, 0.646873), Vector3(-5.36072, 2.5, 0.579719), Vector3(-5.39042, 2.5, 0.511888), Vector3(-5.42039, 2.5, 0.443424), Vector3(-5.45063, 2.5, 0.374376), Vector3(-5.4811, 2.5, 0.30479), Vector3(-5.51178, 2.5, 0.234714), Vector3(-5.54266, 2.5, 0.164196), Vector3(-5.57371, 2.5, 0.0932848), Vector3(-5.60491, 2.5, 0.0220287), Vector3(-5.63624, 2.5, -0.0495238), Vector3(-5.66767, 2.5, -0.121323), Vector3(-5.6992, 2.5, -0.19332), Vector3(-5.73079, 2.5, -0.265466), Vector3(-5.76242, 2.5, -0.337711), Vector3(-5.79408, 2.5, -0.410005), Vector3(-5.82573, 2.5, -0.482299), Vector3(-5.85736, 2.5, -0.554544), Vector3(-5.88895, 2.5, -0.62669), Vector3(-5.92048, 2.5, -0.698687), Vector3(-5.95191, 2.5, -0.770487), Vector3(-5.98324, 2.5, -0.842039), Vector3(-6.01444, 2.5, -0.913295), Vector3(-6.04549, 2.5, -0.984206), Vector3(-6.07637, 2.5, -1.05472), Vector3(-6.10705, 2.5, -1.1248), Vector3(-6.13752, 2.5, -1.19439), Vector3(-6.16776, 2.5, -1.26343), Vector3(-6.19773, 2.5, -1.3319), Vector3(-6.22743, 2.5, -1.39973), Vector3(-6.25684, 2.5, -1.46688), Vector3(-6.28592, 2.5, -1.53331), Vector3(-6.31467, 2.5, -1.59897), Vector3(-6.34307, 2.5, -1.66382), Vector3(-6.37108, 2.5, -1.7278), Vector3(-6.3987, 2.5, -1.79088), Vector3(-6.42591, 2.5, -1.85302), Vector3(-6.45268, 2.5, -1.91416), Vector3(-6.479, 2.5, -1.97428), Vector3(-6.50486, 2.5, -2.03332), Vector3(-6.53022, 2.5, -2.09126), Vector3(-6.55508, 2.5, -2.14803), Vector3(-6.57942, 2.5, -2.20362), Vector3(-6.60322, 2.5, -2.25798), Vector3(-6.62647, 2.5, -2.31107), Vector3(-6.64915, 2.5, -2.36286), Vector3(-6.67124, 2.5, -2.41331), Vector3(-6.69273, 2.5, -2.46239), Vector3(-6.7136, 2.5, -2.51006), Vector3(-6.73384, 2.5, -2.55629), Vector3(-6.75344, 2.5, -2.60105), Vector3(-6.77238, 2.5, -2.64431), Vector3(-6.79065, 2.5, -2.68604), Vector3(-6.80824, 2.5, -2.72621), Vector3(-6.82513, 2.5, -2.76479), Vector3(-6.84132, 2.5, -2.80175), Vector3(-6.85679, 2.5, -2.83708), Vector3(-6.87153, 2.5, -2.87075), Vector3(-6.88553, 2.5, -2.90272), Vector3(-6.89878, 2.5, -2.93299), Vector3(-6.91128, 2.5, -2.96153), Vector3(-6.92301, 2.5, -2.98833), Vector3(-6.93397, 2.5, -3.01335), Vector3(-6.94415, 2.5, -3.03659), Vector3(-6.95353, 2.5, -3.05803), Vector3(-6.96213, 2.5, -3.07766), Vector3(-6.96992, 2.5, -3.09545), Vector3(-6.9769, 2.5, -3.11141), Vector3(-6.98308, 2.5, -3.12551), Vector3(-6.98844, 2.5, -3.13776), Vector3(-6.99298, 2.5, -3.14813), Vector3(-6.99671, 2.5, -3.15663), Vector3(-6.9996, 2.5, -3.16325), Vector3(-7.00167, 2.5, -3.16798), Vector3(-7.00292, 2.5, -3.17081), Vector3(-7.00333, 2.5, -3.17176), Vector3(-7.00184, 2.5, -3.17277), Vector3(-6.99739, 2.5, -3.17581), Vector3(-6.98999, 2.5, -3.18087), Vector3(-6.97964, 2.5, -3.18793), Vector3(-6.9664, 2.5, -3.19697), Vector3(-6.95028, 2.5, -3.20798), Vector3(-6.93134, 2.5, -3.22091), Vector3(-6.90962, 2.5, -3.23573), Vector3(-6.88519, 2.5, -3.25241), Vector3(-6.85812, 2.5, -3.2709), Vector3(-6.82847, 2.5, -3.29114), Vector3(-6.79633, 2.5, -3.31308), Vector3(-6.76178, 2.5, -3.33666), Vector3(-6.72493, 2.5, -3.36182), Vector3(-6.68587, 2.5, -3.38849), Vector3(-6.64471, 2.5, -3.41659), Vector3(-6.60156, 2.5, -3.44605), Vector3(-6.55654, 2.5, -3.47678), Vector3(-6.50977, 2.5, -3.50871), Vector3(-6.46139, 2.5, -3.54174), Vector3(-6.41152, 2.5, -3.57578), Vector3(-6.3603, 2.5, -3.61075), Vector3(-6.30788, 2.5, -3.64654), Vector3(-6.25439, 2.5, -3.68306), Vector3(-6.19998, 2.5, -3.7202), Vector3(-6.1448, 2.5, -3.75787), Vector3(-6.08901, 2.5, -3.79596), Vector3(-6.03275, 2.5, -3.83437), Vector3(-5.97618, 2.5, -3.87299), Vector3(-5.91945, 2.5, -3.91172), Vector3(-5.86272, 2.5, -3.95044), Vector3(-5.80615, 2.5, -3.98906), Vector3(-5.74989, 2.5, -4.02747), Vector3(-5.6941, 2.5, -4.06556), Vector3(-5.63892, 2.5, -4.10323), Vector3(-5.58451, 2.5, -4.14037), Vector3(-5.53102, 2.5, -4.17689), Vector3(-5.4786, 2.5, -4.21268), Vector3(-5.42738, 2.5, -4.24765), Vector3(-5.37751, 2.5, -4.28169), Vector3(-5.32913, 2.5, -4.31472), Vector3(-5.28236, 2.5, -4.34665), Vector3(-5.23734, 2.5, -4.37738), Vector3(-5.19419, 2.5, -4.40684), Vector3(-5.15303, 2.5, -4.43494), Vector3(-5.11397, 2.5, -4.46161), Vector3(-5.07712, 2.5, -4.48677), Vector3(-5.04257, 2.5, -4.51035), Vector3(-5.01043, 2.5, -4.53229), Vector3(-4.98078, 2.5, -4.55253), Vector3(-4.95371, 2.5, -4.57102), Vector3(-4.92928, 2.5, -4.5877), Vector3(-4.90756, 2.5, -4.60252), Vector3(-4.88862, 2.5, -4.61545), Vector3(-4.8725, 2.5, -4.62646), Vector3(-4.85926, 2.5, -4.6355), Vector3(-4.84891, 2.5, -4.64256), Vector3(-4.84151, 2.5, -4.64762), Vector3(-4.83706, 2.5, -4.65066), Vector3(-4.83557, 2.5, -4.65167), Vector3(-4.83123, 2.49947, -4.65101), Vector3(-4.81821, 2.49786, -4.64903), Vector3(-4.79656, 2.4952, -4.64574), Vector3(-4.76632, 2.49148, -4.64115), Vector3(-4.72759, 2.48671, -4.63527), Vector3(-4.68048, 2.48091, -4.62811), Vector3(-4.6251, 2.4741, -4.61969), Vector3(-4.56161, 2.46628, -4.61005), Vector3(-4.49019, 2.45749, -4.5992), Vector3(-4.41103, 2.44775, -4.58717), Vector3(-4.32434, 2.43708, -4.574), Vector3(-4.23038, 2.42552, -4.55973), Vector3(-4.12938, 2.41309, -4.54439), Vector3(-4.02164, 2.39983, -4.52802), Vector3(-3.90744, 2.38578, -4.51067), Vector3(-3.7871, 2.37097, -4.49239), Vector3(-3.66095, 2.35544, -4.47322), Vector3(-3.52933, 2.33924, -4.45323), Vector3(-3.3926, 2.32242, -4.43245), Vector3(-3.25115, 2.30501, -4.41096), Vector3(-3.10535, 2.28707, -4.38882), Vector3(-2.95561, 2.26864, -4.36607), Vector3(-2.80234, 2.24978, -4.34278), Vector3(-2.64596, 2.23053, -4.31902), Vector3(-2.48689, 2.21095, -4.29486), Vector3(-2.32557, 2.1911, -4.27035), Vector3(-2.16245, 2.17103, -4.24557), Vector3(-1.99796, 2.15078, -4.22058), Vector3(-1.83257, 2.13043, -4.19546), Vector3(-1.66673, 2.11002, -4.17026), Vector3(-1.50089, 2.08961, -4.14506), Vector3(-1.3355, 2.06926, -4.11994), Vector3(-1.17101, 2.04901, -4.09495), Vector3(-1.00789, 2.02894, -4.07017), Vector3(-0.846574, 2.00909, -4.04566), Vector3(-0.687504, 1.98951, -4.0215), Vector3(-0.531119, 1.97026, -3.99774), Vector3(-0.377847, 1.9514, -3.97445), Vector3(-0.228107, 1.93297, -3.9517), Vector3(-0.0823102, 1.91503, -3.92955), Vector3(0.059144, 1.89762, -3.90807), Vector3(0.195868, 1.8808, -3.88729), Vector3(0.327485, 1.8646, -3.8673), Vector3(0.453638, 1.84907, -3.84813), Vector3(0.573978, 1.83426, -3.82985), Vector3(0.688177, 1.82021, -3.8125), Vector3(0.795921, 1.80695, -3.79613), Vector3(0.896915, 1.79452, -3.78079), Vector3(0.990883, 1.78296, -3.76652), Vector3(1.07757, 1.77229, -3.75335), Vector3(1.15673, 1.76255, -3.74132), Vector3(1.22815, 1.75376, -3.73047), Vector3(1.29164, 1.74594, -3.72082), Vector3(1.34702, 1.73913, -3.71241), Vector3(1.39413, 1.73333, -3.70525), Vector3(1.43286, 1.72856, -3.69937), Vector3(1.4631, 1.72484, -3.69478), Vector3(1.48475, 1.72218, -3.69149), Vector3(1.49777, 1.72057, -3.68951), Vector3(1.50211, 1.72004, -3.68885), Vector3(1.50458, 1.71963, -3.68869), Vector3(1.51197, 1.7184, -3.6882), Vector3(1.5242, 1.71637, -3.68739), Vector3(1.54113, 1.71355, -3.68627), Vector3(1.56257, 1.70999, -3.68486), Vector3(1.5883, 1.70571, -3.68316), Vector3(1.61803, 1.70076, -3.6812), Vector3(1.65143, 1.69521, -3.67899), Vector3(1.68814, 1.6891, -3.67657), Vector3(1.72776, 1.68251, -3.67396), Vector3(1.76985, 1.67552, -3.67118), Vector3(1.81395, 1.66818, -3.66827), Vector3(1.85958, 1.66059, -3.66526), Vector3(1.90624, 1.65283, -3.66218), Vector3(1.95341, 1.64499, -3.65907), Vector3(2.00058, 1.63715, -3.65595), Vector3(2.04724, 1.62939, -3.65287), Vector3(2.09287, 1.6218, -3.64986), Vector3(2.13697, 1.61446, -3.64695), Vector3(2.17906, 1.60747, -3.64417), Vector3(2.21868, 1.60088, -3.64156), Vector3(2.25539, 1.59477, -3.63914), Vector3(2.28879, 1.58922, -3.63693), Vector3(2.31852, 1.58427, -3.63497), Vector3(2.34425, 1.57999, -3.63327), Vector3(2.36569, 1.57643, -3.63186), Vector3(2.38262, 1.57361, -3.63074), Vector3(2.39485, 1.57158, -3.62993), Vector3(2.40224, 1.57035, -3.62944), Vector3(2.40471, 1.56994, -3.62928), Vector3(2.40582, 1.57073, -3.63037), Vector3(2.40914, 1.57311, -3.63363), Vector3(2.41464, 1.57704, -3.63903), Vector3(2.42225, 1.58248, -3.6465), Vector3(2.4319, 1.58937, -3.65597), Vector3(2.44347, 1.59763, -3.66732), Vector3(2.45683, 1.60718, -3.68045), Vector3(2.47185, 1.61791, -3.69519), Vector3(2.48836, 1.62971, -3.71139), Vector3(2.50618, 1.64243, -3.72888), Vector3(2.5251, 1.65596, -3.74746), Vector3(2.54493, 1.67013, -3.76692), Vector3(2.56545, 1.68478, -3.78706), Vector3(2.58643, 1.69977, -3.80766), Vector3(2.60764, 1.71493, -3.82848), Vector3(2.62885, 1.73009, -3.8493), Vector3(2.64983, 1.74508, -3.8699), Vector3(2.67035, 1.75973, -3.89004), Vector3(2.69018, 1.7739, -3.9095), Vector3(2.70911, 1.78743, -3.92808), Vector3(2.72692, 1.80015, -3.94557), Vector3(2.74343, 1.81195, -3.96177), Vector3(2.75845, 1.82268, -3.97651), Vector3(2.77181, 1.83223, -3.98964), Vector3(2.78338, 1.84049, -4.00099), Vector3(2.79303, 1.84738, -4.01046), Vector3(2.80064, 1.85282, -4.01793), Vector3(2.80614, 1.85675, -4.02333), Vector3(2.80946, 1.85913, -4.02659), Vector3(2.81057, 1.85992, -4.02768), Vector3(2.81773, 1.86167, -4.03175), Vector3(2.83914, 1.86691, -4.04393), Vector3(2.87455, 1.87558, -4.06408), Vector3(2.92358, 1.88759, -4.09197), Vector3(2.9857, 1.9028, -4.12731), Vector3(3.06023, 1.92104, -4.16971), Vector3(3.14633, 1.94212, -4.21869), Vector3(3.24309, 1.96581, -4.27373), Vector3(3.34942, 1.99185, -4.33423), Vector3(3.46418, 2.01994, -4.39951), Vector3(3.58609, 2.04979, -4.46887), Vector3(3.71383, 2.08106, -4.54154), Vector3(3.846, 2.11342, -4.61672), Vector3(3.98114, 2.14651, -4.69361), Vector3(4.11778, 2.17996, -4.77134), Vector3(4.25443, 2.21341, -4.84907), Vector3(4.38957, 2.2465, -4.92596), Vector3(4.52174, 2.27886, -5.00114), Vector3(4.64948, 2.31013, -5.07381), Vector3(4.77139, 2.33998, -5.14317), Vector3(4.88615, 2.36807, -5.20845), Vector3(4.99248, 2.39411, -5.26895), Vector3(5.08924, 2.4178, -5.32399), Vector3(5.17534, 2.43888, -5.37297), Vector3(5.24987, 2.45712, -5.41537), Vector3(5.31199, 2.47233, -5.45071), Vector3(5.36102, 2.48434, -5.4786), Vector3(5.39643, 2.49301, -5.49875), Vector3(5.41784, 2.49825, -5.51093), Vector3(5.425, 2.5, -5.515), Vector3(5.42576, 2.5, -5.5126), Vector3(5.42804, 2.5, -5.50542), Vector3(5.43183, 2.5, -5.49345), Vector3(5.43714, 2.5, -5.47671), Vector3(5.44395, 2.5, -5.45523), Vector3(5.45226, 2.5, -5.42903), Vector3(5.46206, 2.5, -5.39814), Vector3(5.47333, 2.5, -5.3626), Vector3(5.48606, 2.5, -5.32246), Vector3(5.50023, 2.5, -5.27775), Vector3(5.51584, 2.5, -5.22854), Vector3(5.53285, 2.5, -5.17489), Vector3(5.55125, 2.5, -5.11685), Vector3(5.57102, 2.5, -5.05451), Vector3(5.59213, 2.5, -4.98794), Vector3(5.61456, 2.5, -4.91722), Vector3(5.63828, 2.5, -4.84243), Vector3(5.66325, 2.5, -4.76367), Vector3(5.68946, 2.5, -4.68103), Vector3(5.71686, 2.5, -4.59461), Vector3(5.74543, 2.5, -4.50453), Vector3(5.77512, 2.5, -4.41088), Vector3(5.80591, 2.5, -4.31378), Vector3(5.83776, 2.5, -4.21335), Vector3(5.87062, 2.5, -4.10972), Vector3(5.90446, 2.5, -4.003), Vector3(5.93924, 2.5, -3.89334), Vector3(5.97491, 2.5, -3.78086), Vector3(6.01143, 2.5, -3.66569), Vector3(6.04875, 2.5, -3.54799), Vector3(6.08683, 2.5, -3.42789), Vector3(6.12563, 2.5, -3.30554), Vector3(6.1651, 2.5, -3.18109), Vector3(6.20518, 2.5, -3.05469), Vector3(6.24583, 2.5, -2.92649), Vector3(6.287, 2.5, -2.79666), Vector3(6.32864, 2.5, -2.66534), Vector3(6.3707, 2.5, -2.53271), Vector3(6.41313, 2.5, -2.39891), Vector3(6.45587, 2.5, -2.26412), Vector3(6.49888, 2.5, -2.12849), Vector3(6.5421, 2.5, -1.9922), Vector3(6.58548, 2.5, -1.8554), Vector3(6.62896, 2.5, -1.71828), Vector3(6.6725, 2.5, -1.58098), Vector3(6.71604, 2.5, -1.44368), Vector3(6.75952, 2.5, -1.30656), Vector3(6.8029, 2.5, -1.16976), Vector3(6.84612, 2.5, -1.03347), Vector3(6.88913, 2.5, -0.897845), Vector3(6.93187, 2.5, -0.763051), Vector3(6.9743, 2.5, -0.629254), Vector3(7.01636, 2.5, -0.496617), Vector3(7.058, 2.5, -0.365301), Vector3(7.09917, 2.5, -0.235466), Vector3(7.13982, 2.5, -0.10727), Vector3(7.1799, 2.5, 0.0191302), Vector3(7.21937, 2.5, 0.143581), Vector3(7.25817, 2.5, 0.265931), Vector3(7.29625, 2.5, 0.38603), Vector3(7.33357, 2.5, 0.503733), Vector3(7.37009, 2.5, 0.618896), Vector3(7.40576, 2.5, 0.731379), Vector3(7.44054, 2.5, 0.841045), Vector3(7.47438, 2.5, 0.94776), Vector3(7.50724, 2.5, 1.05139), Vector3(7.53909, 2.5, 1.15182), Vector3(7.56988, 2.5, 1.24892), Vector3(7.59957, 2.5, 1.34257), Vector3(7.62814, 2.5, 1.43265), Vector3(7.65554, 2.5, 1.51907), Vector3(7.68175, 2.5, 1.60171), Vector3(7.70672, 2.5, 1.68047), Vector3(7.73044, 2.5, 1.75526), Vector3(7.75287, 2.5, 1.82598), Vector3(7.77398, 2.5, 1.89255), Vector3(7.79375, 2.5, 1.95489), Vector3(7.81215, 2.5, 2.01293), Vector3(7.82916, 2.5, 2.06658), Vector3(7.84477, 2.5, 2.11579), Vector3(7.85894, 2.5, 2.1605), Vector3(7.87167, 2.5, 2.20064), Vector3(7.88294, 2.5, 2.23618), Vector3(7.89274, 2.5, 2.26707), Vector3(7.90105, 2.5, 2.29327), Vector3(7.90786, 2.5, 2.31475), Vector3(7.91317, 2.5, 2.33149), Vector3(7.91696, 2.5, 2.34346), Vector3(7.91924, 2.5, 2.35064), Vector3(7.92, 2.5, 2.35304), Vector3(7.91912, 2.5, 2.35614), Vector3(7.91648, 2.5, 2.36543), Vector3(7.91208, 2.5, 2.38088), Vector3(7.90594, 2.5, 2.40246), Vector3(7.89808, 2.5, 2.4301), Vector3(7.88852, 2.5, 2.46373), Vector3(7.87728, 2.5, 2.50325), Vector3(7.86439, 2.5, 2.54856), Vector3(7.84989, 2.5, 2.59954), Vector3(7.83382, 2.5, 2.65603), Vector3(7.81623, 2.5, 2.7179), Vector3(7.79715, 2.5, 2.78496), Vector3(7.77665, 2.5, 2.85704), Vector3(7.75478, 2.5, 2.93394), Vector3(7.7316, 2.5, 3.01544), Vector3(7.70717, 2.5, 3.10132), Vector3(7.68156, 2.5, 3.19136), Vector3(7.65484, 2.5, 3.28529), Vector3(7.62709, 2.5, 3.38287), Vector3(7.59838, 2.5, 3.48382), Vector3(7.56878, 2.5, 3.58788), Vector3(7.53839, 2.5, 3.69475), Vector3(7.50727, 2.5, 3.80414), Vector3(7.47553, 2.5, 3.91575), Vector3(7.44324, 2.5, 4.02927), Vector3(7.41049, 2.5, 4.1444), Vector3(7.37738, 2.5, 4.26082), Vector3(7.34399, 2.5, 4.37821), Vector3(7.31042, 2.5, 4.49625), Vector3(7.27676, 2.5, 4.61461), Vector3(7.24309, 2.5, 4.73297), Vector3(7.20952, 2.5, 4.85101), Vector3(7.17613, 2.5, 4.9684), Vector3(7.14302, 2.5, 5.08482), Vector3(7.11027, 2.5, 5.19995), Vector3(7.07798, 2.5, 5.31347), Vector3(7.04624, 2.5, 5.42508), Vector3(7.01512, 2.5, 5.53447), Vector3(6.98473, 2.5, 5.64134), Vector3(6.95513, 2.5, 5.74539), Vector3(6.92642, 2.5, 5.84635), Vector3(6.89867, 2.5, 5.94393), Vector3(6.87195, 2.5, 6.03786), Vector3(6.84634, 2.5, 6.1279), Vector3(6.82191, 2.5, 6.21378), Vector3(6.79873, 2.5, 6.29528), Vector3(6.77686, 2.5, 6.37218), Vector3(6.75636, 2.5, 6.44426), Vector3(6.73728, 2.5, 6.51132), Vector3(6.71969, 2.5, 6.57319), Vector3(6.70362, 2.5, 6.62968), Vector3(6.68912, 2.5, 6.68066), Vector3(6.67623, 2.5, 6.72597), Vector3(6.66499, 2.5, 6.76549), Vector3(6.65543, 2.5, 6.79912), Vector3(6.64757, 2.5, 6.82676), Vector3(6.64143, 2.5, 6.84834), Vector3(6.63703, 2.5, 6.86379), Vector3(6.63439, 2.5, 6.87308), Vector3(6.63351, 2.5, 6.87618), Vector3(6.63421, 2.49961, 6.87717), Vector3(6.63632, 2.49845, 6.88014), Vector3(6.63983, 2.49652, 6.88508), Vector3(6.64473, 2.49382, 6.89198), Vector3(6.651, 2.49037, 6.90082), Vector3(6.65863, 2.48616, 6.91158), Vector3(6.6676, 2.48122, 6.92421), Vector3(6.67788, 2.47556, 6.9387), Vector3(6.68945, 2.46919, 6.955), Vector3(6.70227, 2.46213, 6.97307), Vector3(6.71631, 2.45439, 6.99285), Vector3(6.73153, 2.44601, 7.0143), Vector3(6.74789, 2.437, 7.03734), Vector3(6.76534, 2.42739, 7.06193), Vector3(6.78384, 2.4172, 7.088), Vector3(6.80333, 2.40647, 7.11546), Vector3(6.82377, 2.39521, 7.14425), Vector3(6.84509, 2.38347, 7.17429), Vector3(6.86723, 2.37127, 7.20549), Vector3(6.89014, 2.35865, 7.23777), Vector3(6.91376, 2.34565, 7.27105), Vector3(6.93801, 2.33229, 7.30522), Vector3(6.96284, 2.31862, 7.3402), Vector3(6.98817, 2.30467, 7.37589), Vector3(7.01393, 2.29048, 7.41219), Vector3(7.04006, 2.27608, 7.44901), Vector3(7.06648, 2.26153, 7.48623), Vector3(7.09312, 2.24686, 7.52377), Vector3(7.11991, 2.2321, 7.56152), Vector3(7.14678, 2.21731, 7.59937), Vector3(7.17364, 2.20252, 7.63721), Vector3(7.20043, 2.18776, 7.67496), Vector3(7.22707, 2.17309, 7.7125), Vector3(7.25349, 2.15854, 7.74972), Vector3(7.27962, 2.14414, 7.78654), Vector3(7.30538, 2.12995, 7.82284), Vector3(7.33071, 2.116, 7.85853), Vector3(7.35554, 2.10233, 7.89351), Vector3(7.37979, 2.08897, 7.92768), Vector3(7.40341, 2.07596, 7.96096), Vector3(7.42632, 2.06335, 7.99324), Vector3(7.44846, 2.05115, 8.02444), Vector3(7.46978, 2.03941, 8.05448), Vector3(7.49022, 2.02815, 8.08327), Vector3(7.50971, 2.01742, 8.11073), Vector3(7.5282, 2.00723, 8.1368), Vector3(7.54566, 1.99762, 8.16139), Vector3(7.56202, 1.98861, 8.18443), Vector3(7.57724, 1.98023, 8.20588), Vector3(7.59128, 1.97249, 8.22566), Vector3(7.6041, 1.96543, 8.24373), Vector3(7.61567, 1.95906, 8.26003), Vector3(7.62595, 1.9534, 8.27452), Vector3(7.63492, 1.94846, 8.28715), Vector3(7.64255, 1.94425, 8.29791), Vector3(7.64882, 1.9408, 8.30675), Vector3(7.65372, 1.9381, 8.31365), Vector3(7.65723, 1.93617, 8.31859), Vector3(7.65934, 1.93501, 8.32156), Vector3(7.66004, 1.93462, 8.32255)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 3, 4, 8, 8.03333, 8.06667, 8.1, 8.13333, 8.16667, 8.2, 8.23333, 8.26667, 8.3, 8.33333, 8.36667, 8.4, 8.43333, 8.46667, 8.5, 8.53333, 8.56667, 8.6, 8.63333, 8.66667, 8.7, 8.73333, 8.76667, 8.8, 8.83333, 8.86667, 8.9, 8.93333, 8.96667, 9, 9.03333, 9.06667, 9.1, 9.13333, 9.16667, 9.2, 9.23333, 9.26667, 9.3, 9.33333, 9.36667, 9.4, 9.43333, 9.46667, 9.5, 9.53333, 9.56667, 9.6, 9.63333, 9.66667, 9.7, 9.73333, 9.76667, 9.8, 9.83333, 9.86667, 9.9, 9.93333, 9.96667, 10, 10.0333, 10.0667, 10.1, 10.1333, 10.1667, 10.2, 10.2333, 10.2667, 10.3, 10.3333, 10.3667, 10.4, 10.4333, 10.4667, 10.5, 10.5333, 10.5667, 10.6, 10.6333, 10.6667, 10.7, 10.7333, 10.7667, 10.8, 10.8333, 10.8667, 10.9, 10.9333, 10.9667, 11, 11.0333, 11.0667, 11.1, 11.1333, 11.1667, 11.2, 11.2333, 11.2667, 11.3, 11.3333, 11.3667, 11.4, 11.4333, 11.4667, 11.5, 11.5333, 11.5667, 11.6, 11.6333, 11.6667, 11.7, 11.7333, 11.7667, 11.8, 11.8333, 11.8667, 11.9, 11.9333, 11.9667, 12, 12.0333, 12.0667, 12.1, 12.1333, 12.1667, 12.2, 12.2333, 12.2667, 12.3, 12.3333, 12.3667, 12.4, 12.4333, 12.4667, 12.5, 12.5333, 12.5667, 12.6, 12.6333, 12.6667, 12.7, 12.7333, 12.7667, 12.8, 12.8333, 12.8667, 12.9, 12.9333, 12.9667, 13, 13.0333, 13.0667, 13.1, 13.1333, 13.1667, 13.2, 13.2333, 13.2667, 13.3, 13.3333, 13.3667, 13.4, 13.4333, 13.4667, 13.5, 13.5333, 13.5667, 13.6, 13.6333, 13.6667, 13.7, 13.7333, 13.7667, 13.8, 13.8333, 13.8667, 13.9, 13.9333, 13.9667, 14, 14.0289, 14.0622, 14.0956, 14.1289, 14.1622, 14.1956, 14.2289, 14.2622, 14.2956, 14.3289, 14.3622, 14.3956, 14.4289, 14.4622, 14.4956, 14.5289, 14.5622, 14.5956, 14.6289, 14.6622, 14.6956, 14.7289, 14.7622, 14.7956, 14.8289, 14.8622, 14.8956, 14.9289, 14.9622, 14.9956, 15.0289, 15.0622, 15.0956, 15.1289, 15.1622, 15.1956, 15.2289, 15.2622, 15.2956, 15.3289, 15.3622, 15.3956, 15.4289, 15.4622, 15.4956, 15.5289, 15.5622, 15.5956, 15.6289, 15.6622, 15.6956, 15.7289, 15.7622, 15.7956, 15.8289, 15.8622, 15.8956, 15.9289, 15.9622, 15.9956, 16, 16.0333, 16.0667, 16.1, 16.1333, 16.1667, 16.2, 16.2333, 16.2667, 16.3, 16.3333, 16.3667, 16.4, 16.4333, 16.4667, 16.5, 16.5333, 16.5667, 16.6, 16.6333, 16.6667, 16.7, 16.7333, 16.7667, 16.8, 16.8333, 16.8667, 16.9, 16.9333, 16.9667, 17, 17.0333, 17.0667, 17.1, 17.1333, 17.1667, 17.2, 17.2333, 17.2667, 17.3, 17.3333, 17.3667, 17.4, 17.4333, 17.4667, 17.5, 17.5333, 17.5667, 17.6, 17.6333, 17.6667, 17.7, 17.7333, 17.7667, 17.8, 17.8333, 17.8667, 17.9, 17.9333, 17.9667, 18, 18.0333, 18.0667, 18.1, 18.1333, 18.1667, 18.2, 18.2333, 18.2667, 18.3, 18.3333, 18.3667, 18.4, 18.4333, 18.4667, 18.5, 18.5333, 18.5667, 18.6, 18.6333, 18.6667, 18.7, 18.7333, 18.7667, 18.8, 18.8333, 18.8667, 18.9, 18.9333, 18.9667, 19, 19.0333, 19.0667, 19.1, 19.1333, 19.1667, 19.2, 19.2333, 19.2667, 19.3, 19.3333, 19.3667, 19.4, 19.4333, 19.4667, 19.5, 19.5333, 19.5667, 19.6, 19.6333, 19.6667, 19.7, 19.7333, 19.7667, 19.8, 19.8333, 19.8667, 19.9, 19.9333, 19.9667, 20, 20.0333, 20.0667, 20.1, 20.1333, 20.1667, 20.2, 20.2333, 20.2667, 20.3, 20.3333, 20.3667, 20.4, 20.4333, 20.4667, 20.5, 20.5333, 20.5667, 20.6, 20.6333, 20.6667, 20.7, 20.7333, 20.7667, 20.8, 20.8333, 20.8667, 20.9, 20.9333, 20.9667, 21, 21.0333, 21.0667, 21.1, 21.1333, 21.1667, 21.2, 21.2333, 21.2667, 21.3, 21.3333, 21.3667, 21.4, 21.4333, 21.4667, 21.5, 21.5333, 21.5667, 21.6, 21.6333, 21.6667, 21.7, 21.7333, 21.7667, 21.8, 21.8333, 21.8667, 21.9, 21.9333, 21.9667, 22, 22.0333, 22.0667, 22.1, 22.1333, 22.1667, 22.2, 22.2333, 22.2667, 22.3, 22.3333, 22.3667, 22.4, 22.4333, 22.4667, 22.5, 22.5333, 22.5667, 22.6, 22.6333, 22.6667, 22.7, 22.7333, 22.7667, 22.8, 22.8333, 22.8667, 22.9, 22.9333, 22.9667, 23, 23.0333, 23.0667, 23.1, 23.1333, 23.1667, 23.2, 23.2333, 23.2667, 23.3, 23.3333, 23.3667, 23.4, 23.4333, 23.4667, 23.5, 23.5333, 23.5667, 23.6, 23.6333, 23.6667, 23.7, 23.7333, 23.7667, 23.8, 23.8333, 23.8667, 23.9, 23.9333, 23.9667, 24, 24.0333, 24.0667, 24.1, 24.1333, 24.1667, 24.2, 24.2333, 24.2667, 24.3, 24.3333, 24.3667, 24.4, 24.4333, 24.4667, 24.5, 24.5333, 24.5667, 24.6, 24.6333, 24.6667, 24.7, 24.7333, 24.7667, 24.8, 24.8333, 24.8667, 24.9, 24.9333, 24.9667, 25, 25.0333, 25.0667, 25.1, 25.1333, 25.1667, 25.2, 25.2333, 25.2667, 25.3, 25.3333, 25.3667, 25.4, 25.4333, 25.4667, 25.5, 25.5333, 25.5667, 25.6, 25.6333, 25.6667, 25.7, 25.7333, 25.7667, 25.8, 25.8333, 25.8667, 25.9, 25.9333, 25.9667, 26, 26.0333, 26.0667, 26.1, 26.1333, 26.1667, 26.2, 26.2333, 26.2667, 26.3, 26.3333, 26.3667, 26.4, 26.4333, 26.4667, 26.5, 26.5333, 26.5667, 26.6, 26.6333, 26.6667, 26.7, 26.7333, 26.7667, 26.8, 26.8333, 26.8667, 26.9, 26.9333, 26.9667, 27, 27.0333, 27.0667, 27.1, 27.1333, 27.1667, 27.2, 27.2333, 27.2667, 27.3, 27.3333, 27.3667, 27.4, 27.4333, 27.4667, 27.5, 27.5333, 27.5667, 27.6, 27.6333, 27.6667, 27.7, 27.7333, 27.7667, 27.8, 27.8333, 27.8667, 27.9, 27.9333, 27.9667, 28, 28.0333, 28.0667, 28.1, 28.1333, 28.1667, 28.2, 28.2333, 28.2667, 28.3, 28.3333, 28.3667, 28.4, 28.4333, 28.4667, 28.5, 28.5333, 28.5667, 28.6, 28.6333, 28.6667, 28.7, 28.7333, 28.7667, 28.8, 28.8333, 28.8667, 28.9, 28.9333, 28.9667, 29, 29.0333, 29.0667, 29.1, 29.1333, 29.1667, 29.2, 29.2333, 29.2667, 29.3, 29.3333, 29.3667, 29.4, 29.4333, 29.4667, 29.5, 29.5333, 29.5667, 29.6, 29.6333, 29.6667, 29.7, 29.7333, 29.7667, 29.8, 29.8333, 29.8667, 29.9, 29.9333, 29.9667, 30),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, 0, 0), Vector3(0, 0, 0), Vector3(0, 0, 0), Vector3(0, 2.37319, 0), Vector3(0, 2.37196, 0), Vector3(0, 2.36829, 0), Vector3(0, 2.36218, 0), Vector3(0, 2.35365, 0), Vector3(0, 2.34273, 0), Vector3(0, 2.32943, 0), Vector3(0, 2.31381, 0), Vector3(0, 2.2959, 0), Vector3(0, 2.27575, 0), Vector3(0, 2.25341, 0), Vector3(0, 2.22896, 0), Vector3(0, 2.20244, 0), Vector3(0, 2.17395, 0), Vector3(0, 2.14355, 0), Vector3(0, 2.11133, 0), Vector3(0, 2.07738, 0), Vector3(0, 2.04179, 0), Vector3(0, 2.00466, 0), Vector3(0, 1.96608, 0), Vector3(0, 1.92617, 0), Vector3(0, 1.88504, 0), Vector3(0, 1.84279, 0), Vector3(0, 1.79955, 0), Vector3(0, 1.75543, 0), Vector3(0, 1.71055, 0), Vector3(0, 1.66504, 0), Vector3(0, 1.61901, 0), Vector3(0, 1.57261, 0), Vector3(0, 1.52595, 0), Vector3(0, 1.47916, 0), Vector3(0, 1.43237, 0), Vector3(0, 1.3857, 0), Vector3(0, 1.3393, 0), Vector3(0, 1.29328, 0), Vector3(0, 1.24776, 0), Vector3(0, 1.20288, 0), Vector3(0, 1.15876, 0), Vector3(0, 1.11552, 0), Vector3(0, 1.07327, 0), Vector3(0, 1.03214, 0), Vector3(0, 0.99223, 0), Vector3(0, 0.953656, 0), Vector3(0, 0.916522, 0), Vector3(0, 0.88093, 0), Vector3(0, 0.846978, 0), Vector3(0, 0.814759, 0), Vector3(0, 0.784361, 0), Vector3(0, 0.755867, 0), Vector3(0, 0.729356, 0), Vector3(0, 0.7049, 0), Vector3(0, 0.682566, 0), Vector3(0, 0.662415, 0), Vector3(0, 0.644503, 0), Vector3(0, 0.628879, 0), Vector3(0, 0.615585, 0), Vector3(0, 0.604659, 0), Vector3(0, 0.596129, 0), Vector3(0, 0.59002, 0), Vector3(0, 0.586347, 0), Vector3(0, 0.585122, 0), Vector3(0, 0.58392, 0), Vector3(0, 0.580319, 0), Vector3(0, 0.574328, 0), Vector3(0, 0.565963, 0), Vector3(0, 0.555247, 0), Vector3(0, 0.542211, 0), Vector3(0, 0.526889, 0), Vector3(0, 0.509323, 0), Vector3(0, 0.489562, 0), Vector3(0, 0.46766, 0), Vector3(0, 0.443676, 0), Vector3(0, 0.417677, 0), Vector3(0, 0.389734, 0), Vector3(0, 0.359924, 0), Vector3(0, 0.328328, 0), Vector3(0, 0.295032, 0), Vector3(0, 0.260128, 0), Vector3(0, 0.223712, 0), Vector3(0, 0.185884, 0), Vector3(0, 0.146746, 0), Vector3(0, 0.106408, 0), Vector3(0, 0.0649777, 0), Vector3(0, 0.0225705, 0), Vector3(0, -0.0206981, 0), Vector3(0, -0.0647091, 0), Vector3(0, -0.109342, 0), Vector3(0, -0.154475, 0), Vector3(0, -0.199984, 0), Vector3(0, -0.245743, 0), Vector3(0, -0.291629, 0), Vector3(0, -0.337515, 0), Vector3(0, -0.383274, 0), Vector3(0, -0.428783, 0), Vector3(0, -0.473916, 0), Vector3(0, -0.518549, 0), Vector3(0, -0.56256, 0), Vector3(0, -0.605828, 0), Vector3(0, -0.648236, 0), Vector3(0, -0.689666, 0), Vector3(0, -0.730005, 0), Vector3(0, -0.769142, 0), Vector3(0, -0.80697, 0), Vector3(0, -0.843386, 0), Vector3(0, -0.87829, 0), Vector3(0, -0.911586, 0), Vector3(0, -0.943182, 0), Vector3(0, -0.972993, 0), Vector3(0, -1.00094, 0), Vector3(0, -1.02693, 0), Vector3(0, -1.05092, 0), Vector3(0, -1.07282, 0), Vector3(0, -1.09258, 0), Vector3(0, -1.11015, 0), Vector3(0, -1.12547, 0), Vector3(0, -1.13851, 0), Vector3(0, -1.14922, 0), Vector3(0, -1.15759, 0), Vector3(0, -1.16358, 0), Vector3(0, -1.16718, 0), Vector3(0, -1.16838, 0), Vector3(0, -1.16688, 0), Vector3(0, -1.16238, 0), Vector3(0, -1.1549, 0), Vector3(0, -1.14445, 0), Vector3(0, -1.13106, 0), Vector3(0, -1.11477, 0), Vector3(0, -1.09563, 0), Vector3(0, -1.07367, 0), Vector3(0, -1.04897, 0), Vector3(0, -1.02158, 0), Vector3(0, -0.991587, 0), Vector3(0, -0.959059, 0), Vector3(0, -0.924088, 0), Vector3(0, -0.886766, 0), Vector3(0, -0.847193, 0), Vector3(0, -0.805474, 0), Vector3(0, -0.76172, 0), Vector3(0, -0.716048, 0), Vector3(0, -0.66858, 0), Vector3(0, -0.619441, 0), Vector3(0, -0.568763, 0), Vector3(0, -0.516681, 0), Vector3(0, -0.463333, 0), Vector3(0, -0.408862, 0), Vector3(0, -0.353412, 0), Vector3(0, -0.297132, 0), Vector3(0, -0.240171, 0), Vector3(0, -0.182681, 0), Vector3(0, -0.124814, 0), Vector3(0, -0.0667263, 0), Vector3(0, -0.00857103, 0), Vector3(0, 0.0494967, 0), Vector3(0, 0.107322, 0), Vector3(0, 0.16475, 0), Vector3(0, 0.22163, 0), Vector3(0, 0.277808, 0), Vector3(0, 0.333136, 0), Vector3(0, 0.387466, 0), Vector3(0, 0.440654, 0), Vector3(0, 0.492557, 0), Vector3(0, 0.543038, 0), Vector3(0, 0.591962, 0), Vector3(0, 0.639199, 0), Vector3(0, 0.684623, 0), Vector3(0, 0.728112, 0), Vector3(0, 0.769552, 0), Vector3(0, 0.808832, 0), Vector3(0, 0.845847, 0), Vector3(0, 0.880498, 0), Vector3(0, 0.912694, 0), Vector3(0, 0.942348, 0), Vector3(0, 0.969382, 0), Vector3(0, 0.993724, 0), Vector3(0, 1.01531, 0), Vector3(0, 1.03408, 0), Vector3(0, 1.04998, 0), Vector3(0, 1.06298, 0), Vector3(0, 1.07303, 0), Vector3(0, 1.08012, 0), Vector3(0, 1.08422, 0), Vector3(0, 1.08535, 0), Vector3(0, 1.08376, 0), Vector3(0, 1.07899, 0), Vector3(0, 1.07107, 0), Vector3(0, 1.06, 0), Vector3(0, 1.04583, 0), Vector3(0, 1.02858, 0), Vector3(0, 1.00832, 0), Vector3(0, 0.985093, 0), Vector3(0, 0.95897, 0), Vector3(0, 0.930025, 0), Vector3(0, 0.898337, 0), Vector3(0, 0.863998, 0), Vector3(0, 0.827103, 0), Vector3(0, 0.787757, 0), Vector3(0, 0.746071, 0), Vector3(0, 0.702162, 0), Vector3(0, 0.656155, 0), Vector3(0, 0.608179, 0), Vector3(0, 0.55837, 0), Vector3(0, 0.506868, 0), Vector3(0, 0.453818, 0), Vector3(0, 0.399371, 0), Vector3(0, 0.34368, 0), Vector3(0, 0.286901, 0), Vector3(0, 0.229196, 0), Vector3(0, 0.170727, 0), Vector3(0, 0.111659, 0), Vector3(0, 0.0521592, 0), Vector3(0, -0.0076052, 0), Vector3(0, -0.0674654, 0), Vector3(0, -0.127252, 0), Vector3(0, -0.186797, 0), Vector3(0, -0.245933, 0), Vector3(0, -0.304491, 0), Vector3(0, -0.362307, 0), Vector3(0, -0.419218, 0), Vector3(0, -0.475063, 0), Vector3(0, -0.529684, 0), Vector3(0, -0.582929, 0), Vector3(0, -0.634645, 0), Vector3(0, -0.684687, 0), Vector3(0, -0.732915, 0), Vector3(0, -0.779191, 0), Vector3(0, -0.823386, 0), Vector3(0, -0.865375, 0), Vector3(0, -0.905039, 0), Vector3(0, -0.942266, 0), Vector3(0, -0.976951, 0), Vector3(0, -1.009, 0), Vector3(0, -1.03831, 0), Vector3(0, -1.06481, 0), Vector3(0, -1.08843, 0), Vector3(0, -1.10909, 0), Vector3(0, -1.12674, 0), Vector3(0, -1.14132, 0), Vector3(0, -1.15281, 0), Vector3(0, -1.16115, 0), Vector3(0, -1.16634, 0), Vector3(0, -1.16835, 0), Vector3(0, -1.16838, 0), Vector3(0, -1.16864, 0), Vector3(0, -1.16943, 0), Vector3(0, -1.17075, 0), Vector3(0, -1.17258, 0), Vector3(0, -1.17493, 0), Vector3(0, -1.1778, 0), Vector3(0, -1.18116, 0), Vector3(0, -1.18501, 0), Vector3(0, -1.18935, 0), Vector3(0, -1.19415, 0), Vector3(0, -1.19941, 0), Vector3(0, -1.20512, 0), Vector3(0, -1.21125, 0), Vector3(0, -1.21779, 0), Vector3(0, -1.22472, 0), Vector3(0, -1.23203, 0), Vector3(0, -1.23969, 0), Vector3(0, -1.24768, 0), Vector3(0, -1.25598, 0), Vector3(0, -1.26456, 0), Vector3(0, -1.27342, 0), Vector3(0, -1.28251, 0), Vector3(0, -1.29181, 0), Vector3(0, -1.3013, 0), Vector3(0, -1.31096, 0), Vector3(0, -1.32075, 0), Vector3(0, -1.33066, 0), Vector3(0, -1.34064, 0), Vector3(0, -1.35068, 0), Vector3(0, -1.36075, 0), Vector3(0, -1.37082, 0), Vector3(0, -1.38086, 0), Vector3(0, -1.39084, 0), Vector3(0, -1.40075, 0), Vector3(0, -1.41054, 0), Vector3(0, -1.4202, 0), Vector3(0, -1.42969, 0), Vector3(0, -1.43899, 0), Vector3(0, -1.44808, 0), Vector3(0, -1.45694, 0), Vector3(0, -1.46552, 0), Vector3(0, -1.47382, 0), Vector3(0, -1.48181, 0), Vector3(0, -1.48947, 0), Vector3(0, -1.49678, 0), Vector3(0, -1.50371, 0), Vector3(0, -1.51025, 0), Vector3(0, -1.51638, 0), Vector3(0, -1.52209, 0), Vector3(0, -1.52735, 0), Vector3(0, -1.53215, 0), Vector3(0, -1.53649, 0), Vector3(0, -1.54034, 0), Vector3(0, -1.5437, 0), Vector3(0, -1.54657, 0), Vector3(0, -1.54892, 0), Vector3(0, -1.55075, 0), Vector3(0, -1.55207, 0), Vector3(0, -1.55286, 0), Vector3(0, -1.55312, 0), Vector3(0, -1.5529, 0), Vector3(0, -1.55223, 0), Vector3(0, -1.55111, 0), Vector3(0, -1.54956, 0), Vector3(0, -1.54756, 0), Vector3(0, -1.54514, 0), Vector3(0, -1.54229, 0), Vector3(0, -1.53902, 0), Vector3(0, -1.53535, 0), Vector3(0, -1.53127, 0), Vector3(0, -1.52681, 0), Vector3(0, -1.52198, 0), Vector3(0, -1.51678, 0), Vector3(0, -1.51123, 0), Vector3(0, -1.50536, 0), Vector3(0, -1.49916, 0), Vector3(0, -1.49267, 0), Vector3(0, -1.4859, 0), Vector3(0, -1.47886, 0), Vector3(0, -1.47158, 0), Vector3(0, -1.46408, 0), Vector3(0, -1.45637, 0), Vector3(0, -1.44849, 0), Vector3(0, -1.44044, 0), Vector3(0, -1.43225, 0), Vector3(0, -1.42395, 0), Vector3(0, -1.41556, 0), Vector3(0, -1.40709, 0), Vector3(0, -1.39858, 0), Vector3(0, -1.39004, 0), Vector3(0, -1.38151, 0), Vector3(0, -1.373, 0), Vector3(0, -1.36453, 0), Vector3(0, -1.35614, 0), Vector3(0, -1.34784, 0), Vector3(0, -1.33965, 0), Vector3(0, -1.3316, 0), Vector3(0, -1.32372, 0), Vector3(0, -1.31601, 0), Vector3(0, -1.30851, 0), Vector3(0, -1.30123, 0), Vector3(0, -1.29419, 0), Vector3(0, -1.28742, 0), Vector3(0, -1.28093, 0), Vector3(0, -1.27473, 0), Vector3(0, -1.26886, 0), Vector3(0, -1.26331, 0), Vector3(0, -1.25811, 0), Vector3(0, -1.25328, 0), Vector3(0, -1.24882, 0), Vector3(0, -1.24474, 0), Vector3(0, -1.24107, 0), Vector3(0, -1.2378, 0), Vector3(0, -1.23495, 0), Vector3(0, -1.23253, 0), Vector3(0, -1.23053, 0), Vector3(0, -1.22898, 0), Vector3(0, -1.22786, 0), Vector3(0, -1.22719, 0), Vector3(0, -1.22697, 0), Vector3(0, -1.22643, 0), Vector3(0, -1.22481, 0), Vector3(0, -1.22214, 0), Vector3(0, -1.21843, 0), Vector3(0, -1.21374, 0), Vector3(0, -1.20811, 0), Vector3(0, -1.2016, 0), Vector3(0, -1.19429, 0), Vector3(0, -1.18626, 0), Vector3(0, -1.17759, 0), Vector3(0, -1.16838, 0), Vector3(0, -1.15873, 0), Vector3(0, -1.14875, 0), Vector3(0, -1.13854, 0), Vector3(0, -1.12821, 0), Vector3(0, -1.11789, 0), Vector3(0, -1.10768, 0), Vector3(0, -1.0977, 0), Vector3(0, -1.08805, 0), Vector3(0, -1.07884, 0), Vector3(0, -1.07017, 0), Vector3(0, -1.06213, 0), Vector3(0, -1.05483, 0), Vector3(0, -1.04832, 0), Vector3(0, -1.04269, 0), Vector3(0, -1.038, 0), Vector3(0, -1.03429, 0), Vector3(0, -1.03162, 0), Vector3(0, -1.03, 0), Vector3(0, -1.02946, 0), Vector3(0, -1.02972, 0), Vector3(0, -1.03048, 0), Vector3(0, -1.03175, 0), Vector3(0, -1.0335, 0), Vector3(0, -1.03572, 0), Vector3(0, -1.03838, 0), Vector3(0, -1.04145, 0), Vector3(0, -1.04491, 0), Vector3(0, -1.04871, 0), Vector3(0, -1.0528, 0), Vector3(0, -1.05716, 0), Vector3(0, -1.06172, 0), Vector3(0, -1.06644, 0), Vector3(0, -1.07127, 0), Vector3(0, -1.07615, 0), Vector3(0, -1.08103, 0), Vector3(0, -1.08586, 0), Vector3(0, -1.09058, 0), Vector3(0, -1.09514, 0), Vector3(0, -1.0995, 0), Vector3(0, -1.10359, 0), Vector3(0, -1.10739, 0), Vector3(0, -1.11085, 0), Vector3(0, -1.11392, 0), Vector3(0, -1.11658, 0), Vector3(0, -1.1188, 0), Vector3(0, -1.12055, 0), Vector3(0, -1.12182, 0), Vector3(0, -1.12258, 0), Vector3(0, -1.12284, 0), Vector3(0, -1.12549, 0), Vector3(0, -1.1334, 0), Vector3(0, -1.14649, 0), Vector3(0, -1.16461, 0), Vector3(0, -1.18757, 0), Vector3(0, -1.21512, 0), Vector3(0, -1.24694, 0), Vector3(0, -1.2827, 0), Vector3(0, -1.32201, 0), Vector3(0, -1.36442, 0), Vector3(0, -1.40948, 0), Vector3(0, -1.4567, 0), Vector3(0, -1.50555, 0), Vector3(0, -1.5555, 0), Vector3(0, -1.606, 0), Vector3(0, -1.6565, 0), Vector3(0, -1.70645, 0), Vector3(0, -1.7553, 0), Vector3(0, -1.80252, 0), Vector3(0, -1.84758, 0), Vector3(0, -1.88999, 0), Vector3(0, -1.9293, 0), Vector3(0, -1.96506, 0), Vector3(0, -1.99688, 0), Vector3(0, -2.02443, 0), Vector3(0, -2.04739, 0), Vector3(0, -2.06551, 0), Vector3(0, -2.0786, 0), Vector3(0, -2.08651, 0), Vector3(0, -2.08916, 0), Vector3(0, -2.08954, 0), Vector3(0, -2.09068, 0), Vector3(0, -2.09258, 0), Vector3(0, -2.09524, 0), Vector3(0, -2.09865, 0), Vector3(0, -2.10281, 0), Vector3(0, -2.10772, 0), Vector3(0, -2.11336, 0), Vector3(0, -2.11974, 0), Vector3(0, -2.12684, 0), Vector3(0, -2.13466, 0), Vector3(0, -2.14318, 0), Vector3(0, -2.1524, 0), Vector3(0, -2.1623, 0), Vector3(0, -2.17287, 0), Vector3(0, -2.1841, 0), Vector3(0, -2.19598, 0), Vector3(0, -2.20849, 0), Vector3(0, -2.22162, 0), Vector3(0, -2.23534, 0), Vector3(0, -2.24965, 0), Vector3(0, -2.26452, 0), Vector3(0, -2.27995, 0), Vector3(0, -2.2959, 0), Vector3(0, -2.31236, 0), Vector3(0, -2.3293, 0), Vector3(0, -2.34672, 0), Vector3(0, -2.36459, 0), Vector3(0, -2.38288, 0), Vector3(0, -2.40157, 0), Vector3(0, -2.42065, 0), Vector3(0, -2.44008, 0), Vector3(0, -2.45985, 0), Vector3(0, -2.47992, 0), Vector3(0, -2.50028, 0), Vector3(0, -2.5209, 0), Vector3(0, -2.54176, 0), Vector3(0, -2.56283, 0), Vector3(0, -2.58408, 0), Vector3(0, -2.60549, 0), Vector3(0, -2.62703, 0), Vector3(0, -2.64867, 0), Vector3(0, -2.6704, 0), Vector3(0, -2.69218, 0), Vector3(0, -2.71398, 0), Vector3(0, -2.73579, 0), Vector3(0, -2.75757, 0), Vector3(0, -2.7793, 0), Vector3(0, -2.80094, 0), Vector3(0, -2.82248, 0), Vector3(0, -2.84389, 0), Vector3(0, -2.86514, 0), Vector3(0, -2.88621, 0), Vector3(0, -2.90707, 0), Vector3(0, -2.92769, 0), Vector3(0, -2.94805, 0), Vector3(0, -2.96812, 0), Vector3(0, -2.98789, 0), Vector3(0, -3.00732, 0), Vector3(0, -3.0264, 0), Vector3(0, -3.04509, 0), Vector3(0, -3.06338, 0), Vector3(0, -3.08125, 0), Vector3(0, -3.09867, 0), Vector3(0, -3.11561, 0), Vector3(0, -3.13207, 0), Vector3(0, -3.14803, 0), Vector3(0, -3.16345, 0), Vector3(0, -3.17832, 0), Vector3(0, -3.19263, 0), Vector3(0, -3.20635, 0), Vector3(0, -3.21948, 0), Vector3(0, -3.23199, 0), Vector3(0, -3.24387, 0), Vector3(0, -3.2551, 0), Vector3(0, -3.26567, 0), Vector3(0, -3.27557, 0), Vector3(0, -3.28479, 0), Vector3(0, -3.29331, 0), Vector3(0, -3.30113, 0), Vector3(0, -3.30823, 0), Vector3(0, -3.31461, 0), Vector3(0, -3.32025, 0), Vector3(0, -3.32516, 0), Vector3(0, -3.32932, 0), Vector3(0, -3.33273, 0), Vector3(0, -3.33539, 0), Vector3(0, -3.33729, 0), Vector3(0, -3.33843, 0), Vector3(0, -3.33881, 0), Vector3(0, -3.33819, 0), Vector3(0, -3.33631, 0), Vector3(0, -3.3332, 0), Vector3(0, -3.32886, 0), Vector3(0, -3.32329, 0), Vector3(0, -3.31651, 0), Vector3(0, -3.30855, 0), Vector3(0, -3.29943, 0), Vector3(0, -3.28916, 0), Vector3(0, -3.27778, 0), Vector3(0, -3.26532, 0), Vector3(0, -3.25181, 0), Vector3(0, -3.23729, 0), Vector3(0, -3.2218, 0), Vector3(0, -3.20539, 0), Vector3(0, -3.18809, 0), Vector3(0, -3.16995, 0), Vector3(0, -3.15103, 0), Vector3(0, -3.13138, 0), Vector3(0, -3.11104, 0), Vector3(0, -3.09009, 0), Vector3(0, -3.06856, 0), Vector3(0, -3.04653, 0), Vector3(0, -3.02405, 0), Vector3(0, -3.00118, 0), Vector3(0, -2.97799, 0), Vector3(0, -2.95454, 0), Vector3(0, -2.9309, 0), Vector3(0, -2.90712, 0), Vector3(0, -2.88328, 0), Vector3(0, -2.85944, 0), Vector3(0, -2.83566, 0), Vector3(0, -2.81202, 0), Vector3(0, -2.78857, 0), Vector3(0, -2.76538, 0), Vector3(0, -2.74251, 0), Vector3(0, -2.72003, 0), Vector3(0, -2.698, 0), Vector3(0, -2.67647, 0), Vector3(0, -2.65552, 0), Vector3(0, -2.63518, 0), Vector3(0, -2.61553, 0), Vector3(0, -2.59661, 0), Vector3(0, -2.57847, 0), Vector3(0, -2.56117, 0), Vector3(0, -2.54476, 0), Vector3(0, -2.52927, 0), Vector3(0, -2.51475, 0), Vector3(0, -2.50124, 0), Vector3(0, -2.48878, 0), Vector3(0, -2.4774, 0), Vector3(0, -2.46713, 0), Vector3(0, -2.45801, 0), Vector3(0, -2.45005, 0), Vector3(0, -2.44327, 0), Vector3(0, -2.4377, 0), Vector3(0, -2.43336, 0), Vector3(0, -2.43025, 0), Vector3(0, -2.42837, 0), Vector3(0, -2.42775, 0), Vector3(0, -2.4278, 0), Vector3(0, -2.42797, 0), Vector3(0, -2.42823, 0), Vector3(0, -2.42861, 0), Vector3(0, -2.42909, 0), Vector3(0, -2.42967, 0), Vector3(0, -2.43036, 0), Vector3(0, -2.43115, 0), Vector3(0, -2.43203, 0), Vector3(0, -2.43301, 0), Vector3(0, -2.43409, 0), Vector3(0, -2.43525, 0), Vector3(0, -2.4365, 0), Vector3(0, -2.43784, 0), Vector3(0, -2.43925, 0), Vector3(0, -2.44074, 0), Vector3(0, -2.44231, 0), Vector3(0, -2.44394, 0), Vector3(0, -2.44563, 0), Vector3(0, -2.44739, 0), Vector3(0, -2.44919, 0), Vector3(0, -2.45105, 0), Vector3(0, -2.45295, 0), Vector3(0, -2.45489, 0), Vector3(0, -2.45686, 0), Vector3(0, -2.45886, 0), Vector3(0, -2.46088, 0), Vector3(0, -2.46292, 0), Vector3(0, -2.46496, 0), Vector3(0, -2.46702, 0), Vector3(0, -2.46908, 0), Vector3(0, -2.47112, 0), Vector3(0, -2.47316, 0), Vector3(0, -2.47518, 0), Vector3(0, -2.47718, 0), Vector3(0, -2.47916, 0), Vector3(0, -2.48109, 0), Vector3(0, -2.48299, 0), Vector3(0, -2.48485, 0), Vector3(0, -2.48665, 0), Vector3(0, -2.48841, 0), Vector3(0, -2.4901, 0), Vector3(0, -2.49173, 0), Vector3(0, -2.4933, 0), Vector3(0, -2.49479, 0), Vector3(0, -2.4962, 0), Vector3(0, -2.49754, 0), Vector3(0, -2.49879, 0), Vector3(0, -2.49995, 0), Vector3(0, -2.50103, 0), Vector3(0, -2.50201, 0), Vector3(0, -2.50289, 0), Vector3(0, -2.50368, 0), Vector3(0, -2.50437, 0), Vector3(0, -2.50495, 0), Vector3(0, -2.50543, 0), Vector3(0, -2.50581, 0), Vector3(0, -2.50607, 0), Vector3(0, -2.50624, 0), Vector3(0, -2.50629, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Map/Door:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(0, 1, 10.2), Vector3(0.8, 1, 9.5)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Map/Door:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector3(0, 1.5708, 0), Vector3(0, -0.785398, 0)]
}

[sub_resource type="Animation" id="Animation_0q7th"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Camera3D:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0.468954, 3.7166, 5.34513)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Camera3D:rotation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("../Map/Door:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 1, 10.2)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("../Map/Door:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 1.5708, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_7cg2m"]
_data = {
&"Final_Cutscene": SubResource("Animation_n8d1h"),
&"RESET": SubResource("Animation_0q7th")
}

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_p5qb5"]
data = PackedVector3Array

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_7qpel"]
albedo_texture = ExtResource("6_gpk7n")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_jckou"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_etpry"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_dcy45"]
albedo_texture = ExtResource("5_d2o5d")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_2dtqr"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_segch"]
albedo_texture = ExtResource("7_6jvls")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_6jvls"]
albedo_texture = ExtResource("5_d2o5d")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_w7syj"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_8pp25"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_1nfkf"]
albedo_texture = ExtResource("7_6jvls")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_btjxb"]
albedo_texture = ExtResource("5_d2o5d")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_d2o5d"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_gruom"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_gpk7n"]
albedo_texture = ExtResource("3_1nfkf")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_bebq3"]
albedo_texture = ExtResource("12_6jvls")

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_fn3di"]
data = PackedVector3Array

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_x3c7f"]
albedo_texture = ExtResource("5_d2o5d")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ig5kx"]
albedo_texture = ExtResource("7_6jvls")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_18bka"]
albedo_texture = ExtResource("14_jckou")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_s2hfu"]
albedo_texture = ExtResource("18_ig5kx")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_m43w1"]
albedo_texture = ExtResource("20_fn3di")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_vtw47"]
albedo_texture = ExtResource("22_sotle")

[node name="Final" type="Node3D"]
script = ExtResource("1_x3c7f")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_auc74")

[node name="WorldParticles" parent="." instance=ExtResource("1_lskhw")]

[node name="cam_rig" type="Node3D" parent="."]

[node name="Camera3D" type="Camera3D" parent="cam_rig"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.468954, 3.7166, 5.34513)
fov = 85.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="cam_rig"]
libraries = {
&"": SubResource("AnimationLibrary_7cg2m")
}

[node name="Map" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0.861719)

[node name="Library6" type="GridMap" parent="Map"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, -0.5, 0, 9)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(2, 65534, 851971, 3, 65532, 327683, 3, 65534, 327683, 5, 65532, 327683, 5, 65534, 262148, 6, 65532, 262148, 6, 65533, 262148, 6, 65534, 327683, 2, 65532, 262148, 2, 65533, 327683, 3, 65533, 983043, 5, 65533, 393220, 4, 65534, 327683, 4, 65533, 262148, 4, 65532, 851971, 65534, 65533, 786436, 65534, 65534, 851971, 65534, 65532, 393220, 65533, 65534, 327683, 65533, 65533, 327683, 65533, 65532, 851971, 65532, 65532, 851971, 65532, 65533, 393220, 65532, 65534, 393220, 65531, 65534, 458755, 65531, 65533, 786436, 65531, 65532, 786436)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Library5" type="GridMap" parent="Map"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, -3, 0, 3)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(5, 65532, 327683, 5, 65534, 262148, 6, 65532, 262148, 6, 65533, 262148, 6, 65534, 327683, 7, 65532, 327683, 7, 65533, 983043, 7, 65534, 327683, 8, 65532, 327683, 8, 65534, 262148, 8, 65533, 393220, 5, 65533, 393220)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Library4" type="GridMap" parent="Map/Library5"]
transform = Transform3D(1, 1.06581e-14, 4.37114e-08, 1.25688e-14, -1, -4.37114e-08, 4.37114e-08, 4.37114e-08, -1, 7, -5.5, -5)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(0, 65533, 393220, 65534, 65533, 983043, 65535, 65532, 983043, 0, 65534, 917508, 65535, 65533, 917508, 65535, 65534, 851971, 65534, 65534, 851971, 65534, 65532, 851971, 0, 65532, 851971, 1, 65532, 393220, 1, 65533, 983043, 1, 65534, 393220)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Library4" type="GridMap" parent="Map"]
transform = Transform3D(-1, 8.74228e-08, 4.37114e-08, -4.37114e-08, 1.91069e-15, -1, -8.74228e-08, -1, 1.91069e-15, 1.487, 0, -8)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(2, 65534, 851971, 3, 65532, 327683, 3, 65534, 327683, 5, 65532, 327683, 5, 65534, 262148, 6, 65532, 262148, 6, 65533, 262148, 6, 65534, 327683, 2, 65532, 262148, 2, 65533, 327683, 3, 65533, 983043, 5, 65533, 393220, 4, 65534, 327683, 4, 65533, 262148, 4, 65532, 851971, 1, 65534, 393220, 0, 65533, 393220, 1, 65532, 393220, 65534, 65533, 786436, 1, 65533, 983043, 65535, 65532, 983043, 0, 65534, 917508, 65535, 65533, 917508, 65535, 65534, 851971, 65534, 65534, 851971, 65534, 65532, 393220, 0, 65532, 851971, 65533, 65534, 327683, 65533, 65533, 327683, 65533, 65532, 851971, 65532, 65532, 851971, 65532, 65533, 393220, 65532, 65534, 393220, 65531, 65534, 458755, 65531, 65533, 786436, 65533, 65535, 327683, 65531, 65532, 786436)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Library" type="GridMap" parent="Map"]
transform = Transform3D(-4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, -9, 0, -0.5)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(2, 65534, 851971, 3, 65532, 327683, 3, 65534, 327683, 5, 65532, 327683, 5, 65534, 262148, 6, 65532, 262148, 6, 65533, 262148, 6, 65534, 327683, 2, 65532, 262148, 2, 65533, 327683, 3, 65533, 983043, 5, 65533, 393220, 4, 65534, 327683, 4, 65533, 262148, 4, 65532, 851971, 1, 65534, 393220, 0, 65533, 393220, 1, 65532, 393220, 65534, 65533, 786436, 1, 65533, 983043, 65535, 65532, 983043, 0, 65534, 917508, 65535, 65533, 917508, 65535, 65534, 851971, 65534, 65534, 851971, 65534, 65532, 393220, 0, 65532, 851971, 65533, 65534, 327683, 65533, 65533, 327683, 65533, 65532, 851971, 65532, 65532, 851971, 65532, 65533, 393220, 65532, 65534, 393220, 65531, 65534, 458755, 65531, 65533, 786436, 65533, 65535, 327683, 65531, 65532, 786436)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Library2" type="GridMap" parent="Map"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, -11, 0, 3)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(5, 65532, 327683, 5, 65534, 262148, 6, 65532, 262148, 6, 65533, 262148, 6, 65534, 327683, 7, 65532, 327683, 7, 65533, 983043, 7, 65534, 327683, 8, 65532, 327683, 8, 65534, 262148, 8, 65533, 393220, 5, 65533, 393220)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Library4" type="GridMap" parent="Map/Library2"]
transform = Transform3D(1, 1.06581e-14, 4.37114e-08, 1.25688e-14, -1, -4.37114e-08, 4.37114e-08, 4.37114e-08, -1, 7, -5.5, -5)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(0, 65533, 393220, 65534, 65533, 983043, 65535, 65532, 983043, 0, 65534, 917508, 65535, 65533, 917508, 65535, 65534, 851971, 65534, 65534, 851971, 65534, 65532, 851971, 0, 65532, 851971, 1, 65532, 393220, 1, 65533, 983043, 1, 65534, 393220)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Library3" type="GridMap" parent="Map"]
transform = Transform3D(-4.37114e-08, 1, 4.37114e-08, 0, -4.37114e-08, 1, 1, 4.37114e-08, 1.91069e-15, 9, 5, -5.5)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(2, 65534, 851971, 3, 65532, 327683, 3, 65534, 327683, 5, 65532, 327683, 5, 65534, 262148, 6, 65532, 262148, 6, 65533, 458755, 6, 65534, 327683, 2, 65532, 262148, 2, 65533, 327683, 3, 65533, 983043, 5, 65533, 393220, 4, 65534, 327683, 4, 65533, 262148, 4, 65532, 851971, 1, 65534, 393220, 0, 65533, 393220, 1, 65532, 393220, 65534, 65533, 983043, 1, 65533, 983043, 65535, 65532, 983043, 0, 65534, 917508, 65535, 65533, 917508, 65535, 65534, 851971, 65534, 65534, 851971, 65534, 65532, 851971, 0, 65532, 851971, 7, 65532, 458755, 8, 65532, 393220, 8, 65533, 327683, 7, 65533, 786436, 9, 65533, 393220, 7, 65534, 327683, 8, 65534, 786436, 9, 65534, 458755, 9, 65532, 786436)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Structure" type="Node3D" parent="Map"]

[node name="Floor" type="GridMap" parent="Map/Structure"]
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(65526, 65526, 2, 65526, 65527, 2, 65526, 65528, 2, 65526, 65529, 2, 65526, 65530, 2, 65526, 65531, 2, 65526, 65532, 2, 65526, 65533, 2, 65526, 65534, 2, 65526, 65535, 2, 65526, 0, 2, 65526, 1, 2, 65526, 2, 2, 65526, 3, 2, 65526, 4, 2, 65526, 5, 2, 65526, 6, 2, 65526, 7, 2, 65526, 8, 2, 65526, 9, 2, 65527, 65526, 2, 65527, 65527, 2, 65527, 65528, 2, 65527, 65529, 2, 65527, 65530, 2, 65527, 65531, 2, 65527, 65532, 2, 65527, 65533, 2, 65527, 65534, 2, 65527, 65535, 2, 65527, 0, 2, 65527, 1, 2, 65527, 2, 2, 65527, 3, 2, 65527, 4, 2, 65527, 5, 2, 65527, 6, 2, 65527, 7, 2, 65527, 8, 2, 65527, 9, 2, 65528, 65526, 2, 65528, 65527, 2, 65528, 65528, 2, 65528, 65529, 2, 65528, 65530, 2, 65528, 65531, 2, 65528, 65532, 2, 65528, 65533, 2, 65528, 65534, 2, 65528, 65535, 2, 65528, 0, 2, 65528, 1, 2, 65528, 2, 2, 65528, 3, 2, 65528, 4, 2, 65528, 5, 2, 65528, 6, 2, 65528, 7, 2, 65528, 8, 2, 65528, 9, 2, 65529, 65526, 2, 65529, 65527, 2, 65529, 65528, 2, 65529, 65529, 2, 65529, 65530, 2, 65529, 65531, 2, 65529, 65532, 2, 65529, 65533, 2, 65529, 65534, 2, 65529, 65535, 2, 65529, 0, 2, 65529, 1, 2, 65529, 2, 2, 65529, 3, 2, 65529, 4, 2, 65529, 5, 2, 65529, 6, 2, 65529, 7, 2, 65529, 8, 2, 65529, 9, 2, 65530, 65526, 2, 65530, 65527, 2, 65530, 65528, 2, 65530, 65529, 2, 65530, 65530, 2, 65530, 65531, 2, 65530, 65532, 2, 65530, 65533, 2, 65530, 65534, 2, 65530, 65535, 2, 65530, 0, 2, 65530, 1, 2, 65530, 2, 2, 65530, 3, 2, 65530, 4, 2, 65530, 5, 2, 65530, 6, 2, 65530, 7, 2, 65530, 8, 2, 65530, 9, 2, 65531, 65526, 2, 65531, 65527, 2, 65531, 65528, 2, 65531, 65529, 2, 65531, 65530, 2, 65531, 65531, 2, 65531, 65532, 2, 65531, 65533, 2, 65531, 65534, 2, 65531, 65535, 2, 65531, 0, 2, 65531, 1, 2, 65531, 2, 2, 65531, 3, 2, 65531, 4, 2, 65531, 5, 2, 65531, 6, 2, 65531, 7, 2, 65531, 8, 2, 65531, 9, 2, 65532, 65526, 2, 65532, 65527, 2, 65532, 65528, 2, 65532, 65529, 2, 65532, 65530, 2, 65532, 65531, 2, 65532, 65532, 2, 65532, 65533, 2, 65532, 65534, 2, 65532, 65535, 2, 65532, 0, 2, 65532, 1, 2, 65532, 2, 2, 65532, 3, 2, 65532, 4, 2, 65532, 5, 2, 65532, 6, 2, 65532, 7, 2, 65532, 8, 2, 65532, 9, 2, 65533, 65526, 2, 65533, 65527, 2, 65533, 65528, 2, 65533, 65529, 2, 65533, 65530, 2, 65533, 65531, 2, 65533, 65532, 2, 65533, 65533, 2, 65533, 65534, 2, 65533, 65535, 2, 65533, 0, 2, 65533, 1, 2, 65533, 2, 2, 65533, 3, 2, 65533, 4, 2, 65533, 5, 2, 65533, 6, 2, 65533, 7, 2, 65533, 8, 2, 65533, 9, 2, 65534, 65526, 2, 65534, 65527, 2, 65534, 65528, 2, 65534, 65529, 2, 65534, 65530, 2, 65534, 65531, 2, 65534, 65532, 2, 65534, 65533, 2, 65534, 65534, 2, 65534, 65535, 2, 65534, 0, 2, 65534, 1, 2, 65534, 2, 2, 65534, 3, 2, 65534, 4, 2, 65534, 5, 2, 65534, 6, 2, 65534, 7, 2, 65534, 8, 2, 65534, 9, 2, 65535, 65526, 2, 65535, 65527, 2, 65535, 65528, 2, 65535, 65529, 2, 65535, 65530, 2, 65535, 65531, 2, 65535, 65532, 2, 65535, 65533, 2, 65535, 65534, 2, 65535, 65535, 2, 65535, 0, 2, 65535, 1, 2, 65535, 2, 2, 65535, 3, 2, 65535, 4, 2, 65535, 5, 2, 65535, 6, 2, 65535, 7, 2, 65535, 8, 2, 65535, 9, 2, 0, 65526, 2, 0, 65527, 2, 0, 65528, 2, 0, 65529, 2, 0, 65530, 2, 0, 65531, 2, 0, 65532, 2, 0, 65533, 2, 0, 65534, 2, 0, 65535, 2, 0, 0, 2, 0, 1, 2, 0, 2, 2, 0, 3, 2, 0, 4, 2, 0, 5, 2, 0, 6, 2, 0, 7, 2, 0, 8, 2, 0, 9, 2, 1, 65526, 2, 1, 65527, 2, 1, 65528, 2, 1, 65529, 2, 1, 65530, 2, 1, 65531, 2, 1, 65532, 2, 1, 65533, 2, 1, 65534, 2, 1, 65535, 2, 1, 0, 2, 1, 1, 2, 1, 2, 2, 1, 3, 2, 1, 4, 2, 1, 5, 2, 1, 6, 2, 1, 7, 2, 1, 8, 2, 1, 9, 2, 2, 65526, 2, 2, 65527, 2, 2, 65528, 2, 2, 65529, 2, 2, 65530, 2, 2, 65531, 2, 2, 65532, 2, 2, 65533, 2, 2, 65534, 2, 2, 65535, 2, 2, 0, 2, 2, 1, 2, 2, 2, 2, 2, 3, 2, 2, 4, 2, 2, 5, 2, 2, 6, 2, 2, 7, 2, 2, 8, 2, 2, 9, 2, 3, 65526, 2, 3, 65527, 2, 3, 65528, 2, 3, 65529, 2, 3, 65530, 2, 3, 65531, 2, 3, 65532, 2, 3, 65533, 2, 3, 65534, 2, 3, 65535, 2, 3, 0, 2, 3, 1, 2, 3, 2, 2, 3, 3, 2, 3, 4, 2, 3, 5, 2, 3, 6, 2, 3, 7, 2, 3, 8, 2, 3, 9, 2, 4, 65526, 2, 4, 65527, 2, 4, 65528, 2, 4, 65529, 2, 4, 65530, 2, 4, 65531, 2, 4, 65532, 2, 4, 65533, 2, 4, 65534, 2, 4, 65535, 2, 4, 0, 2, 4, 1, 2, 4, 2, 2, 4, 3, 2, 4, 4, 2, 4, 5, 2, 4, 6, 2, 4, 7, 2, 4, 8, 2, 4, 9, 2, 5, 65526, 2, 5, 65527, 2, 5, 65528, 2, 5, 65529, 2, 5, 65530, 2, 5, 65531, 2, 5, 65532, 2, 5, 65533, 2, 5, 65534, 2, 5, 65535, 2, 5, 0, 2, 5, 1, 2, 5, 2, 2, 5, 3, 2, 5, 4, 2, 5, 5, 2, 5, 6, 2, 5, 7, 2, 5, 8, 2, 5, 9, 2, 6, 65526, 2, 6, 65527, 2, 6, 65528, 2, 6, 65529, 2, 6, 65530, 2, 6, 65531, 2, 6, 65532, 2, 6, 65533, 2, 6, 65534, 2, 6, 65535, 2, 6, 0, 2, 6, 1, 2, 6, 2, 2, 6, 3, 2, 6, 4, 2, 6, 5, 2, 6, 6, 2, 6, 7, 2, 6, 8, 2, 6, 9, 2, 7, 65526, 2, 7, 65527, 2, 7, 65528, 2, 7, 65529, 2, 7, 65530, 2, 7, 65531, 2, 7, 65532, 2, 7, 65533, 2, 7, 65534, 2, 7, 65535, 2, 7, 0, 2, 7, 1, 2, 7, 2, 2, 7, 3, 2, 7, 4, 2, 7, 5, 2, 7, 6, 2, 7, 7, 2, 7, 8, 2, 7, 9, 2, 8, 65526, 2, 8, 65527, 2, 8, 65528, 2, 8, 65529, 2, 8, 65530, 2, 8, 65531, 2, 8, 65532, 2, 8, 65533, 2, 8, 65534, 2, 8, 65535, 2, 8, 0, 2, 8, 1, 2, 8, 2, 2, 8, 3, 2, 8, 4, 2, 8, 5, 2, 8, 6, 2, 8, 7, 2, 8, 8, 2, 8, 9, 2, 9, 65526, 2, 9, 65527, 2, 9, 65528, 2, 9, 65529, 2, 9, 65530, 2, 9, 65531, 2, 9, 65532, 2, 9, 65533, 2, 9, 65534, 2, 9, 65535, 2, 9, 0, 2, 9, 1, 2, 9, 2, 2, 9, 3, 2, 9, 4, 2, 9, 5, 2, 9, 6, 2, 9, 7, 2, 9, 8, 2, 9, 9, 2)
}

[node name="Wall" type="GridMap" parent="Map/Structure"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, -10)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(65526, 65531, 2, 65526, 65532, 2, 65526, 65533, 2, 65526, 65534, 2, 65526, 65535, 2, 65527, 65531, 2, 65527, 65532, 2, 65527, 65533, 2, 65527, 65534, 2, 65527, 65535, 2, 65528, 65531, 2, 65528, 65532, 2, 65528, 65533, 2, 65528, 65534, 2, 65528, 65535, 2, 65529, 65531, 2, 65529, 65532, 2, 65529, 65533, 2, 65529, 65534, 2, 65529, 65535, 2, 65530, 65531, 2, 65530, 65532, 2, 65530, 65533, 2, 65530, 65534, 2, 65530, 65535, 2, 65531, 65531, 2, 65531, 65532, 2, 65531, 65533, 2, 65531, 65534, 2, 65531, 65535, 2, 65532, 65531, 2, 65532, 65532, 2, 65532, 65533, 2, 65532, 65534, 2, 65532, 65535, 2, 65533, 65531, 2, 65533, 65532, 2, 65533, 65533, 2, 65533, 65534, 2, 65533, 65535, 2, 65534, 65531, 2, 65534, 65532, 2, 65534, 65533, 2, 65534, 65534, 2, 65534, 65535, 2, 65535, 65531, 2, 65535, 65532, 2, 65535, 65533, 2, 65535, 65534, 2, 65535, 65535, 2, 0, 65531, 2, 0, 65532, 2, 0, 65533, 2, 0, 65534, 2, 0, 65535, 2, 1, 65531, 2, 1, 65532, 2, 1, 65533, 2, 1, 65534, 2, 1, 65535, 2, 2, 65531, 2, 2, 65532, 2, 2, 65533, 2, 2, 65534, 2, 2, 65535, 2, 3, 65531, 2, 3, 65532, 2, 3, 65533, 2, 3, 65534, 2, 3, 65535, 2, 4, 65531, 2, 4, 65532, 2, 4, 65533, 2, 4, 65534, 2, 4, 65535, 2, 5, 65531, 2, 5, 65532, 2, 5, 65533, 2, 5, 65534, 2, 5, 65535, 2, 6, 65531, 2, 6, 65532, 2, 6, 65533, 2, 6, 65534, 2, 6, 65535, 2, 7, 65531, 2, 7, 65532, 2, 7, 65533, 2, 7, 65534, 2, 7, 65535, 2, 8, 65531, 2, 8, 65532, 2, 8, 65533, 2, 8, 65534, 2, 8, 65535, 2, 9, 65531, 2, 9, 65532, 2, 9, 65533, 2, 9, 65534, 2, 9, 65535, 2)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Wall2" type="GridMap" parent="Map/Structure"]
transform = Transform3D(-4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, 10, 0, 0)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(65526, 65531, 2, 65526, 65532, 2, 65526, 65533, 2, 65526, 65534, 2, 65526, 65535, 2, 65527, 65531, 2, 65527, 65532, 2, 65527, 65533, 2, 65527, 65534, 2, 65527, 65535, 2, 65528, 65531, 2, 65528, 65532, 2, 65528, 65533, 2, 65528, 65534, 2, 65528, 65535, 2, 65529, 65531, 2, 65529, 65532, 2, 65529, 65533, 2, 65529, 65534, 2, 65529, 65535, 2, 65530, 65531, 2, 65530, 65532, 2, 65530, 65533, 2, 65530, 65534, 2, 65530, 65535, 2, 65531, 65531, 2, 65531, 65532, 2, 65531, 65533, 2, 65531, 65534, 2, 65531, 65535, 2, 65532, 65531, 2, 65532, 65532, 2, 65532, 65533, 2, 65532, 65534, 2, 65532, 65535, 2, 65533, 65531, 2, 65533, 65532, 2, 65533, 65533, 2, 65533, 65534, 2, 65533, 65535, 2, 65534, 65531, 2, 65534, 65532, 2, 65534, 65533, 2, 65534, 65534, 2, 65534, 65535, 2, 65535, 65531, 2, 65535, 65532, 2, 65535, 65533, 2, 65535, 65534, 2, 65535, 65535, 2, 0, 65531, 2, 0, 65532, 2, 0, 65533, 2, 0, 65534, 2, 0, 65535, 2, 1, 65531, 2, 1, 65532, 2, 1, 65533, 2, 1, 65534, 2, 1, 65535, 2, 2, 65531, 2, 2, 65532, 2, 2, 65533, 2, 2, 65534, 2, 2, 65535, 2, 3, 65531, 2, 3, 65532, 2, 3, 65533, 2, 3, 65534, 2, 3, 65535, 2, 4, 65531, 2, 4, 65532, 2, 4, 65533, 2, 4, 65534, 2, 4, 65535, 2, 5, 65531, 2, 5, 65532, 2, 5, 65533, 2, 5, 65534, 2, 5, 65535, 2, 6, 65531, 2, 6, 65532, 2, 6, 65533, 2, 6, 65534, 2, 6, 65535, 2, 7, 65531, 2, 7, 65532, 2, 7, 65533, 2, 7, 65534, 2, 7, 65535, 2, 8, 65531, 2, 8, 65532, 2, 8, 65533, 2, 8, 65534, 2, 8, 65535, 2, 9, 65531, 2, 9, 65532, 2, 9, 65533, 2, 9, 65534, 2, 9, 65535, 2)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Wall3" type="GridMap" parent="Map/Structure"]
transform = Transform3D(-4.37114e-08, 1, -4.37114e-08, 0, -4.37114e-08, -1, -1, -4.37114e-08, 1.91069e-15, -10, 0, 0)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(65526, 65531, 2, 65526, 65532, 2, 65526, 65533, 2, 65526, 65534, 2, 65526, 65535, 2, 65527, 65531, 2, 65527, 65532, 2, 65527, 65533, 2, 65527, 65534, 2, 65527, 65535, 2, 65528, 65531, 2, 65528, 65532, 2, 65528, 65533, 2, 65528, 65534, 2, 65528, 65535, 2, 65529, 65531, 2, 65529, 65532, 2, 65529, 65533, 2, 65529, 65534, 2, 65529, 65535, 2, 65530, 65531, 2, 65530, 65532, 2, 65530, 65533, 2, 65530, 65534, 2, 65530, 65535, 2, 65531, 65531, 2, 65531, 65532, 2, 65531, 65533, 2, 65531, 65534, 2, 65531, 65535, 2, 65532, 65531, 2, 65532, 65532, 2, 65532, 65533, 2, 65532, 65534, 2, 65532, 65535, 2, 65533, 65531, 2, 65533, 65532, 2, 65533, 65533, 2, 65533, 65534, 2, 65533, 65535, 2, 65534, 65531, 2, 65534, 65532, 2, 65534, 65533, 2, 65534, 65534, 2, 65534, 65535, 2, 65535, 65531, 2, 65535, 65532, 2, 65535, 65533, 2, 65535, 65534, 2, 65535, 65535, 2, 0, 65531, 2, 0, 65532, 2, 0, 65533, 2, 0, 65534, 2, 0, 65535, 2, 1, 65531, 2, 1, 65532, 2, 1, 65533, 2, 1, 65534, 2, 1, 65535, 2, 2, 65531, 2, 2, 65532, 2, 2, 65533, 2, 2, 65534, 2, 2, 65535, 2, 3, 65531, 2, 3, 65532, 2, 3, 65533, 2, 3, 65534, 2, 3, 65535, 2, 4, 65531, 2, 4, 65532, 2, 4, 65533, 2, 4, 65534, 2, 4, 65535, 2, 5, 65531, 2, 5, 65532, 2, 5, 65533, 2, 5, 65534, 2, 5, 65535, 2, 6, 65531, 2, 6, 65532, 2, 6, 65533, 2, 6, 65534, 2, 6, 65535, 2, 7, 65531, 2, 7, 65532, 2, 7, 65533, 2, 7, 65534, 2, 7, 65535, 2, 8, 65531, 2, 8, 65532, 2, 8, 65533, 2, 8, 65534, 2, 8, 65535, 2, 9, 65531, 2, 9, 65532, 2, 9, 65533, 2, 9, 65534, 2, 9, 65535, 2)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Wall4" type="GridMap" parent="Map/Structure"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, -0.5, 0, 10)
mesh_library = ExtResource("2_auc74")
cell_size = Vector3(1, 1, 1)
data = {
"cells": PackedInt32Array(65526, 65531, 2, 65526, 65532, 2, 65526, 65533, 2, 65526, 65534, 2, 65526, 65535, 2, 65527, 65531, 2, 65527, 65532, 2, 65527, 65533, 2, 65527, 65534, 2, 65527, 65535, 2, 65528, 65531, 2, 65528, 65532, 2, 65528, 65533, 2, 65528, 65534, 2, 65528, 65535, 2, 65529, 65531, 2, 65529, 65532, 2, 65529, 65533, 2, 65529, 65534, 2, 65529, 65535, 2, 65530, 65531, 2, 65530, 65532, 2, 65530, 65533, 2, 65530, 65534, 2, 65530, 65535, 2, 65531, 65531, 2, 65531, 65532, 2, 65531, 65533, 2, 65531, 65534, 2, 65531, 65535, 2, 65532, 65531, 2, 65532, 65532, 2, 65532, 65533, 2, 65532, 65534, 2, 65532, 65535, 2, 65533, 65531, 2, 65533, 65532, 2, 65533, 65533, 2, 65533, 65534, 2, 65533, 65535, 2, 65534, 65531, 2, 65534, 65532, 2, 65534, 65533, 2, 65534, 65534, 2, 65534, 65535, 2, 65535, 65531, 2, 65535, 65532, 2, 65535, 65533, 2, 65535, 65534, 2, 65535, 65535, 2, 0, 65531, 2, 0, 65532, 2, 0, 65535, 2, 1, 65531, 2, 1, 65532, 2, 1, 65533, 2, 1, 65534, 2, 1, 65535, 2, 2, 65531, 2, 2, 65532, 2, 2, 65533, 2, 2, 65534, 2, 2, 65535, 2, 3, 65531, 2, 3, 65532, 2, 3, 65533, 2, 3, 65534, 2, 3, 65535, 2, 4, 65531, 2, 4, 65532, 2, 4, 65533, 2, 4, 65534, 2, 4, 65535, 2, 5, 65531, 2, 5, 65532, 2, 5, 65533, 2, 5, 65534, 2, 5, 65535, 2, 6, 65531, 2, 6, 65532, 2, 6, 65533, 2, 6, 65534, 2, 6, 65535, 2, 7, 65531, 2, 7, 65532, 2, 7, 65533, 2, 7, 65534, 2, 7, 65535, 2, 8, 65531, 2, 8, 65532, 2, 8, 65533, 2, 8, 65534, 2, 8, 65535, 2, 9, 65531, 2, 9, 65532, 2, 9, 65533, 2, 9, 65534, 2, 9, 65535, 2, 10, 65533, 262146, 10, 65532, 262146, 10, 65531, 262146, 10, 65534, 262146)
}
metadata/_editor_floor_ = Vector3(0, 0, 0)

[node name="Invisible" type="Node3D" parent="Map"]

[node name="Door" type="MeshInstance3D" parent="Map"]
transform = Transform3D(-1.81e-06, 0, 0.5, 0, 0.5, 0, -0.5, 0, -1.81e-06, 0, 1, 10.2)
mesh = ExtResource("3_7cg2m")
skeleton = NodePath("../../cam_rig/Camera3D")

[node name="StaticBody3D" type="StaticBody3D" parent="Map/Door"]
script = ExtResource("4_kllwd")

[node name="CollisionShape3D" type="CollisionShape3D" parent="Map/Door/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_p5qb5")

[node name="Light" type="Node3D" parent="Map"]

[node name="Chandelier5" parent="Map/Light" instance=ExtResource("5_nirle")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5, 0)

[node name="Chandelier" parent="Map/Light" instance=ExtResource("5_nirle")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 5, -5)

[node name="Chandelier3" parent="Map/Light" instance=ExtResource("5_nirle")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 5, 6)

[node name="Chandelier3" parent="Map/Light/Chandelier3" instance=ExtResource("5_nirle")]
transform = Transform3D(-0.249907, -2.18476e-08, -0.00681903, 2.18557e-08, -0.25, 0, -0.00681903, -5.96138e-10, 0.249907, -2.1895, -2.46317, 3.45395)

[node name="PaperNote" type="MeshInstance3D" parent="Map/Light/Chandelier3"]
transform = Transform3D(-0.0780502, 0, -0.289669, 0, 0.3, 0, 0.289669, 0, -0.0780502, -2.6, -2.81424, 2.49741)
material_override = SubResource("StandardMaterial3D_7qpel")
mesh = ExtResource("7_x3c7f")

[node name="Chandelier2" parent="Map/Light" instance=ExtResource("5_nirle")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 5, -5)

[node name="Chandelier4" parent="Map/Light" instance=ExtResource("5_nirle")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 5, 6)

[node name="pile" type="MeshInstance3D" parent="."]
transform = Transform3D(0.25, 0, 0, 0, 0.25, 0, 0, 0, 0.25, -4.47271, 2.34893, 5.87777)
material_override = SubResource("StandardMaterial3D_jckou")
mesh = ExtResource("4_btjxb")

[node name="pile2" type="MeshInstance3D" parent="pile"]
transform = Transform3D(0.626946, 0, -1.0232, 0, 3.332, 0, 1.0232, 0, 0.626946, -0.45853, -2.88704, 0.103096)
material_override = SubResource("StandardMaterial3D_etpry")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../Map")

[node name="Book2" type="MeshInstance3D" parent="pile/pile2"]
transform = Transform3D(0.716261, 0, 0.425928, 0, 0.4, 0, -0.425928, 0, 0.716261, 0.2703, 0.603874, -0.221407)
material_override = SubResource("StandardMaterial3D_dcy45")
mesh = ExtResource("6_gruom")
skeleton = NodePath("../../../Map")

[node name="Book3" type="MeshInstance3D" parent="pile/pile2"]
transform = Transform3D(1.29013, 0, -0.336655, 0, 0.3, 0, 0.336655, 0, 1.29013, -0.407917, -0.2655, 0.00488663)
material_override = SubResource("StandardMaterial3D_2dtqr")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../../Map")

[node name="Book4" type="MeshInstance3D" parent="pile/pile2"]
transform = Transform3D(-0.399138, 0, 1.09627, 0, 0.8, 0, -1.09627, 0, -0.399138, 0.332265, -0.756408, 0.308838)
material_override = SubResource("StandardMaterial3D_segch")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../../../Map")

[node name="pile3" type="MeshInstance3D" parent="."]
transform = Transform3D(0.20166, 0, -0.246889, 0, 0.323955, 0, 0.246889, 0, 0.20166, 1.33583, 1.00814, 3.68547)
material_override = SubResource("StandardMaterial3D_6jvls")
mesh = ExtResource("4_btjxb")

[node name="Book1" type="MeshInstance3D" parent="pile3"]
transform = Transform3D(0.379558, 0, -0.464689, 0, 0.6, 0, 0.464689, 0, 0.379558, 0.366919, 1.6466, 0.0926704)
material_override = SubResource("StandardMaterial3D_6jvls")
mesh = ExtResource("4_btjxb")

[node name="Book2" type="MeshInstance3D" parent="pile3"]
transform = Transform3D(0.798236, 0, -0.2393, 0, 0.833333, 0, 0.2393, 0, 0.798236, 0.184666, 0.606127, -0.07411)
material_override = SubResource("StandardMaterial3D_w7syj")
mesh = ExtResource("6_gruom")
skeleton = NodePath("../..")

[node name="Book3" type="MeshInstance3D" parent="pile3"]
transform = Transform3D(0.916984, 0, 0.173929, 0, 0.933333, 0, -0.173929, 0, 0.916984, 0.196499, 1.09863, -0.0925217)
material_override = SubResource("StandardMaterial3D_8pp25")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../..")

[node name="Terry" type="MeshInstance3D" parent="."]
transform = Transform3D(-0.0840737, 0, 0.296303, 0, 0.313, 0, -0.296303, 0, -0.0840737, -3.3344, 1.74596, 5.8653)
material_override = SubResource("StandardMaterial3D_1nfkf")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../Bee")

[node name="pile" type="MeshInstance3D" parent="Terry"]
transform = Transform3D(-1.1013, 0, -0.476599, 0, 1.2, 0, 0.476599, 0, -1.1013, 0.678053, -2.41414, -0.00901794)
material_override = SubResource("StandardMaterial3D_btjxb")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../pile")

[node name="Book1" type="MeshInstance3D" parent="Terry/pile"]
transform = Transform3D(0.379558, 0, -0.464689, 0, 0.6, 0, 0.464689, 0, 0.379558, 0.366919, 1.6466, 0.0926704)
material_override = SubResource("StandardMaterial3D_btjxb")
mesh = ExtResource("4_btjxb")

[node name="Book2" type="MeshInstance3D" parent="Terry/pile"]
transform = Transform3D(0.798236, 0, -0.2393, 0, 0.833333, 0, 0.2393, 0, 0.798236, 0.184666, 0.606127, -0.07411)
material_override = SubResource("StandardMaterial3D_d2o5d")
mesh = ExtResource("6_gruom")
skeleton = NodePath("../../../pile")

[node name="Book3" type="MeshInstance3D" parent="Terry/pile"]
transform = Transform3D(0.916984, 0, 0.173929, 0, 0.933333, 0, -0.173929, 0, 0.916984, 0.196499, 1.09863, -0.0925217)
material_override = SubResource("StandardMaterial3D_gruom")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../../../pile")

[node name="Terry" type="MeshInstance3D" parent="Terry"]
transform = Transform3D(-0.155045, 0, 0.546429, 0, 0.577, 0, -0.546429, 0, -0.155045, 20.7974, -0.892614, 11.1527)
material_override = SubResource("StandardMaterial3D_1nfkf")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../Bee")

[node name="pile" type="MeshInstance3D" parent="Terry/Terry"]
transform = Transform3D(-1.1013, 0, -0.476599, 0, 1.2, 0, 0.476599, 0, -1.1013, 0.678053, -2.41414, -0.00901794)
material_override = SubResource("StandardMaterial3D_btjxb")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../pile")

[node name="Book1" type="MeshInstance3D" parent="Terry/Terry/pile"]
transform = Transform3D(0.379558, 0, -0.464689, 0, 0.6, 0, 0.464689, 0, 0.379558, 0.366919, 1.6466, 0.0926704)
material_override = SubResource("StandardMaterial3D_btjxb")
mesh = ExtResource("4_btjxb")

[node name="Book2" type="MeshInstance3D" parent="Terry/Terry/pile"]
transform = Transform3D(0.798236, 0, -0.2393, 0, 0.833333, 0, 0.2393, 0, 0.798236, 0.184666, 0.606127, -0.07411)
material_override = SubResource("StandardMaterial3D_d2o5d")
mesh = ExtResource("6_gruom")
skeleton = NodePath("../../../pile")

[node name="Book3" type="MeshInstance3D" parent="Terry/Terry/pile"]
transform = Transform3D(0.916984, 0, 0.173929, 0, 0.933333, 0, -0.173929, 0, 0.916984, 0.196499, 1.09863, -0.0925217)
material_override = SubResource("StandardMaterial3D_gruom")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../../../pile")

[node name="Book1" type="MeshInstance3D" parent="."]
transform = Transform3D(0.179317, 0, -0.240511, 0, 0.3, 0, 0.240511, 0, 0.179317, 9.11154, 1, 6.34832)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")

[node name="Book1" type="MeshInstance3D" parent="Book1"]
transform = Transform3D(0.364611, 0, -0.489038, 0, 0.61, 0, 0.489038, 0, 0.364611, -10.7554, 3.13509, 14.4147)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")

[node name="Escalier" type="MeshInstance3D" parent="."]
transform = Transform3D(-0.246025, 0, -0.162778, 0, 0.295, 0, 0.162778, 0, -0.246025, 3.63798, 0.965868, 5.98701)
material_override = SubResource("StandardMaterial3D_bebq3")
mesh = ExtResource("13_w7syj")
skeleton = NodePath("")

[node name="StaticBody3D" type="StaticBody3D" parent="Escalier"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Escalier/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_fn3di")

[node name="Escalier" type="MeshInstance3D" parent="Escalier"]
transform = Transform3D(-0.833982, 0, -0.551791, 0, 1, 0, 0.551791, 0, -0.833982, -13.4772, 0.047368, 29.0986)
material_override = SubResource("StandardMaterial3D_bebq3")
mesh = ExtResource("13_w7syj")
skeleton = NodePath("")

[node name="StaticBody3D" type="StaticBody3D" parent="Escalier/Escalier"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Escalier/Escalier/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_fn3di")

[node name="Book2" type="MeshInstance3D" parent="."]
transform = Transform3D(0.231697, 0, -0.190569, 0, 0.3, 0, 0.190569, 0, 0.231697, -1.70257, 1, -3.21637)
material_override = SubResource("StandardMaterial3D_x3c7f")
mesh = ExtResource("6_gruom")

[node name="pile4" type="MeshInstance3D" parent="."]
transform = Transform3D(0.433856, 0, 0, 0, 0.21437, 0, 0, 0, 0.429175, 7.71494, 1.3, -3.43949)
material_override = SubResource("StandardMaterial3D_ig5kx")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../Book3")

[node name="Book2" type="MeshInstance3D" parent="pile4"]
transform = Transform3D(0.480165, 0, -0.363054, 0, 1.2183, 0, 0.367013, 0, 0.485402, 0.135944, 0.540969, 0.0111082)
material_override = SubResource("StandardMaterial3D_x3c7f")
mesh = ExtResource("6_gruom")
skeleton = NodePath("../../Book2")

[node name="Book1" type="MeshInstance3D" parent="pile4/Book2"]
transform = Transform3D(0.646413, 0, 0.975218, 0, 1.17, 0, -0.975218, 0, 0.646413, 0.073051, 0.664269, -0.122374)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../../Book1")

[node name="Book1" type="MeshInstance3D" parent="pile4/Book2/Book1"]
transform = Transform3D(0.726999, 0, 0.916719, 0, 1.17, 0, -0.916719, 0, 0.726999, -0.0567975, 0.585639, 0.246989)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../../Book1")

[node name="Book3" type="MeshInstance3D" parent="pile4/Book2/Book1/Book1"]
transform = Transform3D(0.175217, 0, -0.43663, 0, 1.10411, 0, 0.507516, 0, 0.150744, 0.169382, 0.590549, 0.34841)
material_override = SubResource("StandardMaterial3D_ig5kx")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../../../../../Book3")

[node name="pile4" type="MeshInstance3D" parent="pile4"]
transform = Transform3D(-0.277309, 4.92209e-08, -0.278084, -2.88495e-08, -0.67, 0, -0.178885, 3.17511e-08, 0.43109, -33.5586, 1.45728, -8.80606)
material_override = SubResource("StandardMaterial3D_ig5kx")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../Book3")

[node name="Book1" type="MeshInstance3D" parent="pile4/pile4"]
transform = Transform3D(1.4748, -1.3411e-07, 0.518461, -5.96046e-08, 0.771039, -2.23517e-08, -0.334536, 0, 0.951609, 0.577232, 1.12424, -0.0304317)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../Book2/Book1/Book1")

[node name="Book1" type="MeshInstance3D" parent="pile4/pile4/Book1"]
transform = Transform3D(0.726999, 0, 0.916719, 0, 1.17, 0, -0.916719, 0, 0.726999, -0.0567975, 0.585639, 0.246989)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../../../Book1")

[node name="Book3" type="MeshInstance3D" parent="pile4/pile4/Book1/Book1"]
transform = Transform3D(0.504471, -3.63383e-08, -1.21209, 4.47035e-08, 2.85123, -9.22356e-09, 1.4612, 9.97334e-09, 0.418469, 0.169388, 0.590549, 0.348412)
material_override = SubResource("StandardMaterial3D_ig5kx")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../../../../../Book3")

[node name="Book2" type="MeshInstance3D" parent="pile4/pile4"]
transform = Transform3D(1.06578, -1.19209e-07, -0.805835, -3.72529e-08, 0.659008, 2.98023e-08, 0.519964, 0, 0.68769, 0.400764, 0.686485, 0.0157394)
material_override = SubResource("StandardMaterial3D_x3c7f")
mesh = ExtResource("6_gruom")
skeleton = NodePath("../../Book2")

[node name="Book3" type="MeshInstance3D" parent="."]
transform = Transform3D(0.231624, 0, 0.190658, 0, 0.3, 0, -0.190658, 0, 0.231624, 6.24757, 1, -1.12727)
material_override = SubResource("StandardMaterial3D_ig5kx")
mesh = ExtResource("8_w7syj")

[node name="pile2" type="MeshInstance3D" parent="."]
transform = Transform3D(0.4925, 0, -0.199961, 0, 0.201, 0, 0.317553, 0, 0.310124, -6.57677, 1.01, 2.24343)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../Book1")

[node name="pile2" type="MeshInstance3D" parent="pile2"]
transform = Transform3D(0.625295, 0, 0.328412, 0, 2.91578, 0, -0.642315, 0, 0.811453, 0.199501, 0.597796, 0.408509)
material_override = SubResource("StandardMaterial3D_x3c7f")
mesh = ExtResource("6_gruom")
skeleton = NodePath("../../Book2")

[node name="Book2" type="MeshInstance3D" parent="pile2/pile2"]
transform = Transform3D(0.375227, 0, -0.6847, 0, 0.364675, 0, 0.773783, 0, 0.261272, 0.161928, 0.604883, -0.0996552)
material_override = SubResource("StandardMaterial3D_gpk7n")
mesh = ExtResource("4_btjxb")
skeleton = NodePath("../..")

[node name="Book3" type="MeshInstance3D" parent="pile2/pile2/Book2"]
transform = Transform3D(0.110526, 0, 0.782323, 0, 0.864446, 0, -0.327334, 0, 0.428726, 0.538673, 0.595875, -0.375273)
material_override = SubResource("StandardMaterial3D_ig5kx")
mesh = ExtResource("8_w7syj")
skeleton = NodePath("../../../../Book3")

[node name="Newspaper" type="MeshInstance3D" parent="."]
transform = Transform3D(0.115, 0, 0, 0, 0.115, 0, 0, 0, 0.115, 1.60195, 1.46705, -3.58918)
material_override = SubResource("StandardMaterial3D_18bka")
mesh = ExtResource("15_etpry")

[node name="Newspaper" type="MeshInstance3D" parent="Newspaper"]
transform = Transform3D(0.482411, 0, -1.05113, 0, 1.2, 0, 0.875945, 0, 0.578894, 13.1033, -3.98922, 60.6278)
material_override = SubResource("StandardMaterial3D_18bka")
mesh = ExtResource("15_etpry")

[node name="Chair" type="MeshInstance3D" parent="Newspaper"]
transform = Transform3D(0.915657, 0, -2.01248, 0, 2.211, 0, 2.01248, 0, 0.915657, -32.4221, -4.29253, 56.6519)
material_override = SubResource("StandardMaterial3D_s2hfu")
mesh = ExtResource("19_bebq3")

[node name="Chest" type="MeshInstance3D" parent="Newspaper"]
transform = Transform3D(3.46637, 0, 2.63799, 0, 4.356, 0, -2.63799, 0, 3.46637, 58.5633, -4.06134, 111.45)
material_override = SubResource("StandardMaterial3D_m43w1")
mesh = ExtResource("21_18bka")

[node name="Desk" type="MeshInstance3D" parent="Newspaper"]
transform = Transform3D(1.89739, 0, -1.75707, 0, 2.586, 0, 1.75707, 0, 1.89739, -80.8424, -4.06134, 113.421)
material_override = SubResource("StandardMaterial3D_vtw47")
mesh = ExtResource("23_3ybhc")

[connection signal="interacted" from="Map/Door/StaticBody3D" to="Map/Door/StaticBody3D" method="_on_interacted"]
[connection signal="interaction_finished" from="Map/Door/StaticBody3D" to="Map/Door/StaticBody3D" method="_on_interaction_finished"]
